on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

name: Upload Release Asset

jobs:
  app_bundling:
    name: App Bundling
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8']
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip install tornado
      - name: Linux Bundling
        if: matrix.os == 'ubuntu-latest'
        run: bash plenopticam/scripts/bundling/py2bin_gh.sh
      - name: macOS Bundling
        if: matrix.os == 'macos-latest'
        run: |
          npm install --global create-dmg
          bash plenopticam/scripts/bundling/pyinst2app_gh.sh
      - name: Windows Bundling
        if: matrix.os == 'windows-latest'
        run: |
          choco install advanced-installer --version=17.0.0
          pip install pypiwin32
          pip install pyinstaller --upgrade
          plenopticam/scripts/bundling/py2exe.bat
          plenopticam/scripts/bundling/msi_auto-gen.bat
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release
      - uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./dist/*"]'