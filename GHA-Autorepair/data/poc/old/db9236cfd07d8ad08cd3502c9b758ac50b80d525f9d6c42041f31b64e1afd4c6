on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ released ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Rust Setup
        id: setup
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0
        with:
          shared-key: ${{ runner.os }}-cargo-${{ steps.setup.outputs.cachekey }}

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build protobuf-compiler pkg-config
          cargo install --force cargo-deb 

      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          cargo deb --target x86_64-unknown-linux-gnu --no-build

      - name: Release nightly
        if: github.event_name == 'push'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "nightly"
          prerelease: true
          title: "Development Build"
          files: |
            target/x86_64-unknown-linux-gnu/release/gsv
            target/x86_64-unknown-linux-gnu/debian/*.deb

      - name: Release stable
        if: github.event_name == 'release'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ github.event.release.tag_name }}"
          title: "${{ github.event.release.tag_name }}"
          prerelease: false
          files: |
            target/x86_64-unknown-linux-gnu/release/gsv
            target/x86_64-unknown-linux-gnu/debian/*.deb


