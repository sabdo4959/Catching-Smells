name: .NET Build & Publish

on:
  push:
   branches: -master
   tags: -'v*'
  
jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Publish with dotnet
      run: |
          cd src/DBSvr/
          dotnet build --configuration Release
          dotnet publish -c Release -o ../Build/DBSvr
          zip -qq -r /src/Build/DBSvr.zip src/Build/DBSvr
          cd src/LoginSvr/
          dotnet build --configuration Release
          dotnet publish -c Release -o ../Build/LoginSvr
          zip -qq -r /src/Build/LoginSvr.zip src/Build/LoginSvr
          cd src/SelGate/
          dotnet build --configuration Release
          dotnet publish -c Release -o ../Build/SelGate
          zip -qq -r /src/Build/SelGate.zip src/Build/SelGate
          cd src/LoginGate/
          dotnet build --configuration Release
          dotnet publish -c Release -o ../Build/LoginGate
          zip -qq -r /src/Build/LoginGate.zip src/Build/LoginGate
          cd src/GameSvr/
          dotnet build --configuration Release
          dotnet publish -c Release -o ../Build/GameSvr
          zip -qq -r /src/Build/GameSvr.zip src/Build/GameSvr
          cd src/GameGate/
          dotnet build --configuration Release
          dotnet publish -c Release -o ../Build/GameGate
          zip -qq -r /src/Build/GameGate.zip src/Build/GameGate
          cd src/MakePlay/
          dotnet build --configuration Release
          dotnet publish -c Release -o ../Build/MakePlay
          zip -qq -r /src/Build/MakePlay.zip src/Build/MakePlay


    - name: Create release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        tag_name: v${{steps.version.outputs.value}}
        release_name: v${{steps.version.outputs.value}}
        body: ${{steps.description.outputs.content}}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /src/Build/DBSvr.zip
          asset_name: dev.${{ steps.create_release.outputs.tag }}-DBSvr.zip
          asset_content_type: application/zip

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /src/Build/LoginSvr.zip
          asset_name: dev.${{ steps.create_release.outputs.tag }}-LoginSvr.zip
          asset_content_type: application/zip

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /src/Build/SelGate.zip
          asset_name: dev.${{ steps.create_release.outputs.tag }}-SelGate.zip
          asset_content_type: application/zip

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /src/Build/LoginGate.zip
          asset_name: dev.${{ steps.create_release.outputs.tag }}-LoginGate.zip
          asset_content_type: application/zip

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /src/Build/GameSvr.zip
          asset_name: dev.${{ steps.create_release.outputs.tag }}-GameSvr.zip
          asset_content_type: application/zip

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /src/Build/GameGate.zip
          asset_name: dev.${{ steps.create_release.outputs.tag }}-GameGate.zip
          asset_content_type: application/zip

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /src/Build/MakePlay.zip
          asset_name: dev.${{ steps.create_release.outputs.tag }}-MakePlay.zip
          asset_content_type: application/zip
