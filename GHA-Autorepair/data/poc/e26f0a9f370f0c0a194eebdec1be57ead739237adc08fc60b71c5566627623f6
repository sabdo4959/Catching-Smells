# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
  release:
    types: [published]

jobs:
  deploy-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements.txt
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.AMULET_CORE_PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
    - name: Build Docs
      shell: bash
      evn:
        RTDTOKEN: ${{ secrets.RTDTOKEN }}
        RTDURL: ${{ secrets.RTDURL }}
        TAGNAME: ${{ github.event.release.tag_name }}
      run: |
        release_regex_version='^([0-9]+\.[0-9]+(\.[0-9]+)?\.)([0-9]+)$'
        if [[ $TAGNAME =~ $release_regex_version ]]; then
          # if it is a full release trigger the stable docs build
          curl -X POST -d "branches=stable" -d "token=$RTDTOKEN" $RTDURL
        else
          # if it is a beta release trigger the beta docs build
          curl -X POST -d "branches=latest" -d "token=$RTDTOKEN" $RTDURL
        fi
