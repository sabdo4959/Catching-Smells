name: Publish OneDocker image

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Manually running this workflow will skip "Check New Commits" step and build image directly'
        default: "Run"
      new_tag:
        description: "The new tag of the docker image"
        required: false
        type: string
        default: latest-build
      tracker_hash:
        description: "[Internal usage] Used for tracking workflow job status within Meta infra"
        required: false
        type: str

env:
  DISTRO: ubuntu
  REGISTRY: ghcr.io
  LOCAL_IMAGE_NAME: fbpcs/onedocker/test
  RC_REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}/rc/onedocker
  PROD_REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}/onedocker
  COORDINATOR_IMAGE: ghcr.io/facebookresearch/fbpcs/coordinator
  PL_CONTAINER_NAME: e2e_pl_container
  PA_CONTAINER_NAME: e2e_pa_container
  TIME_RANGE: 24 hours
  FBPCF_VERSION: 2.1.132  # Please also update line 8 in .github/workflows/build_fbpcs_images.yml
  PID_VERSION: 0.0.8

jobs:
  ### Build and publish rc/onedocker image
  build_image:
    name: Build Onedocker, MPC Games and Data Processing Images
    runs-on: [self-hosted, fbpcs-build]
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Print Tracker Hash
        run: echo ${{ inputs.tracker_hash }}

      - name: Remove unused images
        run: |
          docker image prune -af

      - name: Build onedocker image in rc
        run: |
          ./build-docker.sh onedocker -t ${{ inputs.new_tag }} -f -p linux/amd64 -v ${{ env.FBPCF_VERSION }} -i ${{ env.PID_VERSION }}

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag docker image
        run: |
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ inputs.new_tag }} ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ inputs.new_tag }} ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ inputs.new_tag }}
          # temporarily tagging with rc because the task definition
          # (fbpcs-github-cicd:4 https://us-west-2.console.aws.amazon.com/ecs/home?region=us-west-2#/taskDefinitions/fbpcs-github-cicd/4)
          # points at :rc instead of latest-build
          docker tag ${{ env.LOCAL_IMAGE_NAME }}:${{ inputs.new_tag }} ${{ env.RC_REGISTRY_IMAGE_NAME }}:rc

      - name: Push image to rc registry
        run: |
          docker push --all-tags ${{ env.RC_REGISTRY_IMAGE_NAME }}

  e2e_test:
    name: Run End to End Tests
    runs-on: ubuntu-latest
    needs: build_image
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Print Tracker Hash
        run: echo ${{ inputs.tracker_hash }}

      - name: Get AWS Session name
        id: aws_session_name
        run: |
          echo session_name=$(echo publish-onedocker-tests-${{ inputs.new_tag }} | tr " " "-") >> $GITHUB_OUTPUT

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_E2E_TEST_ROLE_TO_ASSUME }}
          aws-region: us-west-2
          role-duration-seconds: 5400
          role-session-name: ${{ steps.aws_session_name.outputs.session_name }}

      - name: Clean Up Docker Images
        run: |
          docker image prune -af

      - name: Pull coordinator image
        run: |
          docker pull ${{ env.COORDINATOR_IMAGE }}:${{ inputs.new_tag }}

      ### Private Lift and Attribution E2E tests
      - name: End to end testing
        timeout-minutes: 90
        run: |
          docker run -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_SESSION_TOKEN -e AWS_DEFAULT_REGION --rm -v "instances":"/instances" -v "$(realpath fbpcs_e2e_aws.yml):/home/pcs/pl_coordinator_env/fbpcs_e2e_aws.yml" -v "$(realpath bolt_config.yml):/home/pcs/pl_coordinator_env/bolt_config.yml" ${{ env.COORDINATOR_IMAGE }}:${{ inputs.new_tag }} python3.8 -m fbpcs.private_computation_cli.private_computation_cli bolt_e2e --bolt_config="bolt_config.yml"
        working-directory: fbpcs/tests/github/

      - name: Pull image from rc registry
        run: |
          docker pull ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }}

      - name: Set output
        id: vars
        run: echo ::set-output name=ref::${GITHUB_REF##*/}

      - name: Tag image
        run: |
          docker tag ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }} ${{ env.PROD_REGISTRY_IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }} ${{ env.PROD_REGISTRY_IMAGE_NAME }}:${{ inputs.new_tag }}
          docker tag ${{ env.RC_REGISTRY_IMAGE_NAME }}:${{ github.sha }} ${{ env.PROD_REGISTRY_IMAGE_NAME }}:${{ steps.vars.outputs.ref }}

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker image to prod registry
        run: |
          docker push --all-tags ${{ env.PROD_REGISTRY_IMAGE_NAME }}
