Welcome to GHA CI Detector
Detecting smells for /Users/nam/workflows/c6252f27f8defe45e1e077a8b11a5638c48634cd7cb10000e921693b90832302
We have found 19 smells
	- 1. Define permissions for workflows with external actions (job at line: 15)
	- 2. Use commit hash instead of tags for action versions (line 20)
	- 2. Use commit hash instead of tags for action versions (line 47)
	- 2. Use commit hash instead of tags for action versions (line 25)
	- 2. Use commit hash instead of tags for action versions (line 55)
	- 2. Use commit hash instead of tags for action versions (line 23)
	- 4. Prevent running issue/PR actions on forks line -1:95
	- 5. Avoid jobs without timeouts (line: 15)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 15)
	- 16. Use names for run steps (lines 24:24)
	- 17. Use cache parameter instead of cache option
	- 18. Steps should only perform a single command (line -1)
	- 20. Avoid installing packages without version (line -1)
The following styling errors were found: 
20:5: wrong indentation: expected 6 but found 4 (indentation)
114:1: too many blank lines (1 > 0) (empty-lines)
Unable to parse yaml file: name: 48 - Reusable workflow 3

on:
  workflow_call:

jobs:
  job-reusable-2:
    runs-on: ubuntu-latest
    steps:
      - run: |
        echo "Waiting 1 minute 30 seconds..."
        sleep 90
        echo "Hello World"
while scanning a simple key
  in "<file>", line 11, column 9
could not find expected ':'
  in "<file>", line 12, column 9
Detecting smells for /Users/nam/workflows/bfe2668aef80d92b7982fa8b5d515293050b61932aa3d807844b2ae92ad8bb61
We have found 3 smells
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 7)
	- 21. Avoid workflows without comments
The following styling errors were found: 
12:9: syntax error: could not find expected ':' (syntax)
Detecting smells for /Users/nam/workflows/cd5037f8e53c575214a162a5bd263b4a0c3eb3e40a6339f07b27d0ec79130d6f
We have found 11 smells
	- 2. Use commit hash instead of tags for action versions (line 30)
	- 2. Use commit hash instead of tags for action versions (line 22)
	- 5. Avoid jobs without timeouts (line: 15)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 16)
	- 16. Use names for run steps (lines 23:23)
	- 18. Steps should only perform a single command (line -1)
	- 20. Avoid installing packages without version (line -1)
The following styling errors were found: 
12:5: wrong indentation: expected 6 but found 4 (indentation)
Unable to parse yaml file: #
# THIS FILE IS GENERATED. SEE https://github.com/Chia-Network/chia-blockchain/tree/main/tests#readme
#
name: Ubuntu wallet-simple_sync Test

on:
  push:
    branches:
      - main
    tags:
        - '**'
  pull_request:
    branches:
      - '**'

concurrency:
  # SHA is added to the end if on `main` to let all main workflows run
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref == 'refs/heads/main' && github.sha || '' }}
  cancel-in-progress: true

jobs:
  build:
    name: Ubuntu wallet-simple_sync Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest]
    env:
      JOB_FILE_NAME: tests_${{ matrix.os }}_python-${{ matrix.python-version }}_wallet-simple_sync

    env:
      CHIA_ROOT: ${{ github.workspace }}/.chia/mainnet

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Python environment
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache npm
      uses: actions/cache@v2.1.6
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip
      uses: actions/cache@v2.1.6
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Checkout test blocks and plots
      uses: actions/checkout@v3
      with:
        repository: 'Chia-Network/test-cache'
        path: '.chia'
        ref: '0.28.0'
        fetch-depth: 1

    - name: Run install script
      env:
        INSTALL_PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        sh install.sh -d

# Omitted installing Timelord

    - name: Test wallet-simple_sync code with pytest
      run: |
        . ./activate
        venv/bin/coverage run --rcfile=.coveragerc ./venv/bin/py.test tests/wallet/simple_sync/test_*.py -s -v --durations 0 -n 0 -m "not benchmark" -p no:monitor

    - name: Process coverage data
      run: |
        venv/bin/coverage combine --rcfile=.coveragerc .coverage.*
        venv/bin/coverage xml --rcfile=.coveragerc -o coverage.xml
        mkdir coverage_reports
        cp .coverage "coverage_reports/.coverage.${{ env.JOB_FILE_NAME }}"
        cp coverage.xml "coverage_reports/coverage.${{ env.JOB_FILE_NAME }}.xml"
        venv/bin/coverage report --rcfile=.coveragerc --show-missing

    - name: Publish coverage
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage_reports/*
        if-no-files-found: error

# Omitted resource usage check

#
# THIS FILE IS GENERATED. SEE https://github.com/Chia-Network/chia-blockchain/tree/main/tests#readme
#

while constructing a mapping
  in "<file>", line 23, column 5
found duplicate key "env" with value "{'CHIA_ROOT': '${{ github.workspace }}/.chia/mainnet'}" (original value: "{'JOB_FILE_NAME': 'tests_${{ matrix.os }}_python-${{ matrix.python-version }}_wallet-simple_sync'}")
  in "<file>", line 35, column 5

To suppress this check see:
    https://yaml.dev/doc/ruamel.yaml/api/#Duplicate_keys

Detecting smells for /Users/nam/workflows/a213a851c82357b79f2c11fc331f2fc07aa5f4282936241cd807747480e0ce83
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 100)
	- 2. Use commit hash instead of tags for action versions (line 39)
	- 2. Use commit hash instead of tags for action versions (line 44)
	- 2. Use commit hash instead of tags for action versions (line 49)
	- 14. Avoid incorrectly formatted workflows
The following styling errors were found: 
11:9: wrong indentation: expected 6 but found 8 (indentation)
35:5: duplication of key "env" in mapping (key-duplicates)
39:5: wrong indentation: expected 6 but found 4 (indentation)
Unable to parse yaml file: name: Build Debian Package

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'GitHub Ref'
        required: true
        description: 'refs/tags/1.6.16'
      semver:
        description: 'SemVer String (e.g. 1.7.0-beta1)'
        required: true
      ppaver:
        description: 'Full PPA Version String (e.g. 1.6.16+1.7.0~beta1-0ppa1)'
        required: true
      dput:
        description: 'Upload to PPA'
        required: true
        default: false
        type: boolean

env:
  JAVA_VERSION: 19
  OPENJFX_JMODS_AMD64: 'https://download2.gluonhq.com/openjfx/19/openjfx-19_linux-x64_bin-jmods.zip'
  OPENJFX_JMODS_AARCH64: 'https://download2.gluonhq.com/openjfx/19/openjfx-19_linux-aarch64_bin-jmods.zip'

jobs:
  build:
    name: Build Debian Package
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.events.inputs.ref }}
      - id: versions
        name: Get version information
        run: |
          SEM_VER_STR="${{ github.events.inputs.semver }}"
          SEM_VER_NUM=`echo ${SEM_VER_STR} | sed -E 's/([0-9]+\.[0-9]+\.[0-9]+).*/\1/'`
          REVCOUNT=`git rev-list --count HEAD`
          echo "semVerStr=${SEM_VER_STR}" >> $GITHUB_OUTPUT
          echo "semVerNum=${SEM_VER_NUM}" >> $GITHUB_OUTPUT
          echo "revNum=${REVCOUNT}" >> $GITHUB_OUTPUT
      - name: Install build tools
        run: |
          sudo add-apt-repository ppa:coffeelibs/openjdk
          sudo apt-get update
          sudo apt-get install debhelper devscripts dput coffeelibs-jdk-19 libgtk2.0-0
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'
      - name: Run maven
        run: mvn -B clean package -Pdependency-check,linux -DskipTests
      - name: Download OpenJFX jmods
        id: download-jmods
        run: |
          curl -L ${{ env.OPENJFX_JMODS_AMD64 }} -o openjfx-amd64.zip
          mkdir -p jmods/amd64
          unzip -j openjfx-amd64.zip \*/javafx.base.jmod \*/javafx.controls.jmod \*/javafx.fxml.jmod \*/javafx.graphics.jmod -d jmods/amd64
          curl -L ${{ env.OPENJFX_JMODS_AARCH64 }} -o openjfx-aarch64.zip
          mkdir -p jmods/aarch64
          unzip -j openjfx-aarch64.zip \*/javafx.base.jmod \*/javafx.controls.jmod \*/javafx.fxml.jmod \*/javafx.graphics.jmod -d jmods/aarch64
      - name: Ensure major jfx version in pom and in jmods is the same
        shell: pwsh
        run: |
          mkdir jfxBaseJmodAmd64
          jmod extract --dir jfxBaseJmodAmd64 jmods/amd64/javafx.base.jmod
          $jfxJmodVersionAmd64 = ((Get-Content -Path "jfxBaseJmodAmd64/lib/javafx.properties" | Where-Object {$_ -like 'javafx.version=*' }) -replace '.*=','') -split "\."
          mkdir jfxBaseJmodAarch64
          jmod extract --dir jfxBaseJmodAarch64 jmods/aarch64/javafx.base.jmod
          $jfxJmodVersionAarch64 = ((Get-Content -Path "jfxBaseJmodAarch64/lib/javafx.properties" | Where-Object {$_ -like 'javafx.version=*' }) -replace '.*=','') -split "\."
          if ($jfxJmodVersionAmd64[0] -ne $jfxJmodVersionAarch64[0] ) {
            Write-Error "JavaFX Jmods for aarch64 and amd64 are different major versions"
            exit 1
          }
          $jfxPomVersion = (&mvn help:evaluate "-Dexpression=javafx.version" -q -DforceStdout) -split "\."
          if ($jfxPomVersion[0] -ne $jfxJmodVersionAmd64[0]) {
            Write-Error "Major part of JavaFX version in pom($($jfxPomVersion[0])) does not match the version of Jmods($($jfxJmodVersionAmd64[0])) "
            exit 1
          }
      - name: Create orig.tar.gz with common/ libs/ mods/ jmods/
        run: |
          mkdir pkgdir
          cp -r target/libs pkgdir
          cp -r target/mods pkgdir
          cp -r jmods pkgdir
          cp -r dist/linux/common/ pkgdir
          cp target/cryptomator-*.jar pkgdir/mods
          tar -cJf cryptomator_${{ github.event.inputs.ppaver }}.orig.tar.xz -C pkgdir .
      - name: Patch and rename pkgdir
        run: |
          cp -r dist/linux/debian/ pkgdir
          export RFC2822_TIMESTAMP=`date --rfc-2822`
          envsubst '${SEMVER_STR} ${VERSION_NUM} ${REVISION_NUM}' < dist/linux/debian/rules > pkgdir/debian/rules
          envsubst '${PPA_VERSION} ${RFC2822_TIMESTAMP}' < dist/linux/debian/changelog > pkgdir/debian/changelog
          find . -name "*.jar" >> pkgdir/debian/source/include-binaries
          mv pkgdir cryptomator_${{ github.event.inputs.ppaver }}
        env:
          SEMVER_STR: ${{ steps.versions.outputs.semVerStr }}
          VERSION_NUM: ${{ steps.versions.outputs.semVerNum }}
          REVISION_NUM: ${{ steps.versions.outputs.revNum }}
          PPA_VERSION: ${{ github.event.inputs.ppaver }}
      - name: Prepare GPG-Agent for signing with key 615D449FE6E6A235
        run: |
          echo "${GPG_PRIVATE_KEY}" | gpg --batch --quiet --import
          echo "${GPG_PASSPHRASE}" | gpg --batch --quiet --passphrase-fd 0 --pinentry-mode loopback -u 615D449FE6E6A235 --dry-run --sign README.md
        env:
          GPG_PRIVATE_KEY: ${{ secrets.RELEASES_GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.RELEASES_GPG_PASSPHRASE }}
      - name: debuild
        run: |
          debuild -S -sa -d
          debuild -b -sa -d
        env:
          DEBSIGN_PROGRAM: gpg --batch --pinentry-mode loopback
          DEBSIGN_KEYID: 615D449FE6E6A235
        working-directory: cryptomator_${{ github.event.inputs.ppaver }}
      - name: Create detached GPG signatures
        run: |
          gpg --batch --quiet --passphrase-fd 0 --pinentry-mode loopback -u 615D449FE6E6A235 --detach-sign -a cryptomator_*_amd64.deb
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-deb-package
          path: |
            cryptomator_*.dsc
            cryptomator_*.orig.tar.xz
            cryptomator_*.debian.tar.xz
            cryptomator_*_source.buildinfo
            cryptomator_*_source.changes
            cryptomator_*_amd64.deb
            cryptomator_*.asc
      - name: Publish on PPA
        if: inputs.dput
        run: dput ppa:sebastian-stenzel/cryptomator-beta cryptomator_*_source.changes
      
      # If ref is a tag, also upload to GitHub Releases:
      - name: Determine tag name
        if: startsWith(github.events.inputs.ref, 'refs/tags/')
        run: |
          REF=${{ github.events.inputs.ref }}
          echo "TAG_NAME=${REF##*/}" >> $GITHUB_ENV
      - name: Publish Debian package on GitHub Releases
        if: startsWith(github.events.inputs.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          tag_name: ${{ github.env.TAG_NAME }}
          token: ${{ secrets.CRYPTOBOT_RELEASE_TOKEN }}
          files: |
            cryptomator_*_amd64.deb
            cryptomator_*.asc
while constructing a mapping
  in "<file>", line 7, column 9
found duplicate key "description" with value "refs/tags/1.6.16" (original value: "GitHub Ref")
  in "<file>", line 9, column 9

To suppress this check see:
    https://yaml.dev/doc/ruamel.yaml/api/#Duplicate_keys

Detecting smells for /Users/nam/workflows/a31b41aad4aa1e455f5668a8f9feec2042f16bf5444acc799d77c4886842ec5f
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 147)
	- 2. Use commit hash instead of tags for action versions (line 124)
	- 2. Use commit hash instead of tags for action versions (line 31)
	- 2. Use commit hash instead of tags for action versions (line 49)
	- 14. Avoid incorrectly formatted workflows
The following styling errors were found: 
9:9: duplication of key "description" in mapping (key-duplicates)
139:1: trailing spaces (trailing-spaces)
155:30: no new line character at the end of file (new-line-at-end-of-file)
Detecting smells for /Users/nam/workflows/a6c4846b890db259b878704d820e7a593e1aaca52f2a1a87359058a8ce7587f5
We have found 13 smells
	- 1. Define permissions for workflows with external actions (job at line: 13)
	- 2. Use commit hash instead of tags for action versions (line 21)
	- 2. Use commit hash instead of tags for action versions (line 24)
	- 2. Use commit hash instead of tags for action versions (line 29)
	- 5. Avoid jobs without timeouts (line: 13)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 16. Use names for run steps (lines 22:22)
	- 18. Steps should only perform a single command (line -1)
	- 20. Avoid installing packages without version (line -1)
The following styling errors were found: 
8:16: too many spaces inside brackets (brackets)
8:23: too many spaces inside brackets (brackets)
10:16: too many spaces inside brackets (brackets)
10:23: too many spaces inside brackets (brackets)
14:63: trailing spaces (trailing-spaces)
22:5: wrong indentation: expected 6 but found 4 (indentation)
32:11: wrong indentation: expected 8 but found 10 (indentation)
46:1: trailing spaces (trailing-spaces)
53:1: trailing spaces (trailing-spaces)
Unable to parse yaml file: ---
name: reviewdog-workflow
on:  # yamllint disable-line rule:truthy
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize

# Applies on all review jobs below
# See Reviewdog doc provided at https://github.com/reviewdog/reviewdog
# github-pr-check: Adds lint as annotations in the PR that can be toggled by pressing 'a'
# github-pr-review: Adds lint as GitHub comments 

jobs:
  pre_job_go_determinator:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # Only run the main job for changes including the following paths
          paths: '[".github/workflows/reviewdog-workflow.yml", "src/go/**"]'

  pre_job_c_cpp_determinator:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # Only run the main job for changes including the following paths
          paths: '[".github/workflows/reviewdog-workflow.yml", "lte/gateway/c/**", "orc8r/gateway/c/**"]'

  cpplint:
    if: ${{ needs.pre_job_c_cpp_determinator.outputs.should_skip == 'false' }}
    ##
    #  Cpplint aims to lint to the Google Style guide. For detailed
    #  rationale on each linting rule, see
    #  https://google.github.io/styleguide/cppguide.html
    ##
    #  To suppress false-positive errors of a certain category, add a
    #  'NOLINT(category)' comment to the line.  NOLINT or NOLINT(*)
    #  suppresses errors of all categories on that line.
    ##
    #  For details on cpplint optinos see the detailed comments in
    #  https://github.com/google/styleguide/blob/gh-pages/cpplint/cpplint.py
    ##
    runs-on: ubuntu-latest
    steps:
      uses: actions/checkout@master
      name: Install CPP Lint and ReviewDog
        run: |
          wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh \
           | sh -s -- -b .
          pip install cpplint
      name: Run CPP Lint and push Annotations
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cpplint --recursive ${{ github.workspace }} \
            --extensions=hh,c,hpp,cpp,cuh,cc,cxx,c++,hxx,h,h++,cu \
            --filter=build/include_subdir,build/c++11 \
            --linelength=120 2>&1 \
             | ./reviewdog -efm="%f:%l: %m" -name="cpplint" -reporter="github-pr-check" -level="warning"

  golangci-lint:
    if: ${{ needs.pre_job_go_determinator.outputs.should_skip == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_flags: '--config=../../.golangci.yml'
          reporter: github-pr-review  # Comments on PR with review comments.
          workdir: src/go/

  hadolint:
    name: dockerfile-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: hadolint
        uses: reviewdog/action-hadolint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check  # Default is github-pr-check
          # Ignore DL3005-"Do not use apt-get upgrade or dist-upgrade"
          hadolint_ignore: DL3005
          filter_mode: added  # All added or modified lines

  misspell:
    name: misspell
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v1
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.github_token }}
          filter_mode: added  # Any added or changed content.
          reporter: github-pr-review  # Post code review comments.
          locale: "US"
  
  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          filter_mode: added # Any added or changed content.
          reporter: github-pr-check # Post code review comments. Falls back to Annotations.
          pattern: "*.sh" # Optional.
          # Other options omitted here but possible.
          # - fail_on_error
          # - path
          # - exclude
          # - shellcheck_flags

  wemake-python-styleguide:
    name: wemake-python-styleguide
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed files
        id: py-changes
        # Set outputs.py to be a list of modified python files
        run: |
          echo "::set-output name=py::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .py$ | xargs)"
      - if: ${{ steps.py-changes.outputs.py }}
        name: wemake-python-styleguide
        uses: wemake-services/wemake-python-styleguide@0.15.2
        with:
          reporter: 'github-pr-check'
          path: ${{ steps.py-changes.outputs.py }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: yamllint
        uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.github_token }}
          level: warning
          filter_mode: added  # Any added or changed content.
          reporter: github-pr-check  # Comments on PR with review comments.
          yamllint_flags: "-d .github/workflows/config/yamllint_config.yml ."

mapping values are not allowed here
  in "<file>", line 58, column 12
Detecting smells for /Users/nam/workflows/d5ce3bebf31d3c36b9b79016c03f464b36459be04c5e8e11a1c73f4538dd212f
We have found 12 smells
	- 2. Use commit hash instead of tags for action versions (line 135)
	- 2. Use commit hash instead of tags for action versions (line 117)
	- 2. Use commit hash instead of tags for action versions (line 158)
	- 2. Use commit hash instead of tags for action versions (line 78)
	- 2. Use commit hash instead of tags for action versions (line 76)
	- 2. Use commit hash instead of tags for action versions (line 89)
	- 2. Use commit hash instead of tags for action versions (line 119)
	- 2. Use commit hash instead of tags for action versions (line 91)
	- 2. Use commit hash instead of tags for action versions (line 106)
	- 2. Use commit hash instead of tags for action versions (line 145)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 16)
The following styling errors were found: 
13:49: trailing spaces (trailing-spaces)
113:1: trailing spaces (trailing-spaces)
58:12: syntax error: mapping values are not allowed here (syntax)
Detecting smells for /Users/nam/workflows/18a6e326f1d5d0cd0197f594d6f65a9383f248fa5db1697e68c1f5f52ad6b8fd
We have found 13 smells
	- 1. Define permissions for workflows with external actions (job at line: 13)
	- 2. Use commit hash instead of tags for action versions (line 17)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 5. Avoid jobs without timeouts (line: 13)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 14)
	- 16. Use names for run steps (lines 18:18)
	- 19. Run tests on multiple OS's (job: build)
	- 22. Run CI on multiple language versions (job: build)
The following styling errors were found: 
5:16: too many spaces inside brackets (brackets)
5:23: too many spaces inside brackets (brackets)
25:14: too few spaces before comment: expected 2 (comments)
Detecting smells for /Users/nam/workflows/df6d6d4ef1c9d00e6d4249ee2087a4557006763ffcaa057b724c09a473c62421
We have found 13 smells
	- 1. Define permissions for workflows with external actions (job at line: 18)
	- 2. Use commit hash instead of tags for action versions (line 39)
	- 2. Use commit hash instead of tags for action versions (line 41)
	- 5. Avoid jobs without timeouts (line: 87)
	- 5. Avoid jobs without timeouts (line: 18)
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 89)
	- 16. Use names for run steps (lines -1:-1)
	- 16. Use names for run steps (lines 40:40)
	- 16. Use names for run steps (lines -1:42)
	- 18. Steps should only perform a single command (line -1)
	- 21. Avoid workflows without comments
Unable to parse yaml file: name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-18.04
    env:
      MIX_ENV: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: 1.13.1
              otp: 24.2
            lint: lint
          - pair:
              elixir: 1.7.4
              otp: 19.3.6.13
    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ matrix.pair.otp }}
          elixir-version: ${{ matrix.pair.elixir }}

      - name: Install Dependencies
        run: |
          mix deps.get --only test
          mix deps.compile

      - name: Check that code is formatted
        run: mix format --check-formatted
        if: ${{ matrix.lint }}

      - name: Check that there are no unused dependencies in mix.lock
        run: mix deps.get && mix deps.unlock --check-unused
        if: ${{ matrix.lint }}

      - Compile with --warnings-as-errors
        run: mix compile --warnings-as-errors
        if: ${{ matrix.lint }}

      - name: Run tests
        run: mix test

mapping values are not allowed here
  in "<file>", line 47, column 12
Detecting smells for /Users/nam/workflows/0704bc7c17620a58bf1c422682f783ae8f3ea562484d542cea8dd80d5b38bbf6
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 27)
	- 2. Use commit hash instead of tags for action versions (line 25)
	- 14. Avoid incorrectly formatted workflows
	- 21. Avoid workflows without comments
The following styling errors were found: 
47:12: syntax error: mapping values are not allowed here (syntax)
Detecting smells for /Users/nam/workflows/9f72e73646528f492c7ab6167387bb60eb86b510aeacbecaefefc65affcbbec2
We have found 15 smells
	- 1. Define permissions for workflows with external actions (job at line: 10)
	- 2. Use commit hash instead of tags for action versions (line 31)
	- 2. Use commit hash instead of tags for action versions (line 45)
	- 2. Use commit hash instead of tags for action versions (line 24)
	- 2. Use commit hash instead of tags for action versions (line 20)
	- 5. Avoid jobs without timeouts (line: 10)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 16)
	- 19. Run tests on multiple OS's (job: CodeQL-Build)
The following styling errors were found: 
20:5: wrong indentation: expected 6 but found 4 (indentation)
41:6: missing starting space in comment (comments)
Unable to parse yaml file: on:
  - push
  paths:
    - "src/**" # Only run on changes to the src directory.
name: rustfmt
jobs:
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: rustfmt
        uses: docker://rust:latest
        with:
          entrypoint: bash
          args: -c "rustup component add rustfmt && rustfmt --check **/*.rs"

while parsing a block collection
  in "<file>", line 2, column 3
expected <block end>, but found '?'
  in "<file>", line 3, column 3
Detecting smells for /Users/nam/workflows/eafd8619ee686d743b409880088c4ab4a3ce9d7bff182051ecbfcce7d27081e6
We have found 2 smells
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 8)
The following styling errors were found: 
3:3: syntax error: expected <block end>, but found '?' (syntax)
4:5: wrong indentation: expected 6 but found 4 (indentation)
4:16: too few spaces before comment: expected 2 (comments)
Unable to parse yaml file: name: Tests with KVM support

on:
  pull_request:
  push:
    branches:
      - master
      - staging
      - trying
  schedule:
    - cron: '0 0 * * 6'

jobs:
  build:
    name: Test 
    runs-on: self-hosted
    - name: Show OS infos
      run: |
          uname -a

while parsing a block mapping
  in "<file>", line 15, column 5
expected <block end>, but found '-'
  in "<file>", line 17, column 5
Detecting smells for /Users/nam/workflows/91b80ac627b177256ad52f8413ace40e469323d73eab5434e94caf854ced42cf
We have found 2 smells
	- 14. Avoid incorrectly formatted workflows
	- 21. Avoid workflows without comments
The following styling errors were found: 
15:15: trailing spaces (trailing-spaces)
17:5: syntax error: expected <block end>, but found '-' (syntax)
Unable to parse yaml file: name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    env:
      LD_LIBRARY_PATH: /home/runner/work/sixtyfps/Qt/5.12.9/gcc_64/lib

    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v2
#    - name: Cache Qt
#      id: cache-qt
#      uses: actions/cache@v1
#      with:
#        path: ../Qt
#        key: ${{ runner.os }}-QtCache
#    - name: Install Qt
#      uses: jurplel/install-qt-action@v2
#      with:
#        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache cargo index
      uses: actions/cache@v2
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}
    - name: Install latest stable
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          target: wasm32-unknown-unknown
    - name: Build
      uses: actions-rs/cargo@v1
      with:
          command: build
          args: --verbose --all-features
    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
          command: fmt
          args: -- --check
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
          command: test
          args: --verbose
    - name: WASM Build
      uses: actions-rs/cargo@v1
      with:
          command: build
          args: --target wasm32-unknown-unknown --verbose -p rustwasmtest
    - name: Prepare cmake module
      run: cargo xtask cmake --prefix $HOME/sixtyfps_install --install
    - name: C++ Test
      uses: lukka/run-cmake@v2.4
      with:
        cmakeListsTxtPath: CMakeLists.txt

while parsing a block mapping
  in "<file>", line 11, column 5
expected <block end>, but found '-'
  in "<file>", line 28, column 5
Detecting smells for /Users/nam/workflows/da0b25b0960d69ad378bf7468648707472bafe67fd3d81c66ce4f118b3b485e9
We have found 7 smells
	- 2. Use commit hash instead of tags for action versions (line 16)
	- 2. Use commit hash instead of tags for action versions (line 28)
	- 2. Use commit hash instead of tags for action versions (line 50)
	- 2. Use commit hash instead of tags for action versions (line 43)
	- 2. Use commit hash instead of tags for action versions (line 72)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 13)
The following styling errors were found: 
5:16: too many spaces inside brackets (brackets)
5:23: too many spaces inside brackets (brackets)
7:16: too many spaces inside brackets (brackets)
7:23: too many spaces inside brackets (brackets)
17:6: wrong indentation: expected 6 but found 5 (indentation)
18:1: comment not indented like content (comments-indentation)
28:5: syntax error: expected <block end>, but found '-' (syntax)
53:11: wrong indentation: expected 8 but found 10 (indentation)
58:11: wrong indentation: expected 8 but found 10 (indentation)
63:11: wrong indentation: expected 8 but found 10 (indentation)
68:11: wrong indentation: expected 8 but found 10 (indentation)
Unable to parse yaml file: name: CI

on:
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
  workflow_dispatch: # e.g. to manually trigger on foreign PRs

env:
  LOWEST_SUPPORTED_UNITY_VERSION: 2019
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_NOLOGO: 1

jobs:
  cancel-previous-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@a40b8845c0683271d9f53dfcb887a7e181d3918b # Tag: 0.9.1
        with:
          access_token: ${{ github.token }}

  android-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: Android
      runsOn: ubuntu-latest

  ios-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: iOS
      runsOn: macos-latest

  macos-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: macOS
      runsOn: macos-latest

  linux-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: Linux
      runsOn: ubuntu-latest

  windows-sdk:
    uses: ./.github/workflows/sdk.yml
    with:
      target: Windows
      runsOn: windows-latest

  build:
    name: Build - ${{ matrix.unity-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # 2022.1.0a12 removed until S.T.J issues fixed
        unity-version: ['2019', '2020', '2021']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Checkout submodules
        run: ./scripts/init-submodules.sh src/sentry-dotnet

      - name: Load env
        id: env
        shell: pwsh
        run: echo "::set-output name=unityVersion::$(./scripts/ci-env.ps1 "unity${{ matrix.unity-version }}")"

      - run: echo "::add-mask::${{ secrets.LICENSE_SERVER_URL }}"

      - name: Restore Unity Packages
        uses: actions/cache@v2
        with:
          path: |
            samples/unity-of-bugs/Library/Packages
            temp/unity-packages/Library/ScriptAssemblies/*.TestRunner.*
          key: samples/unity-of-bugs|${{ steps.env.outputs.unityVersion }}-${{ hashFiles('samples/unity-of-bugs/Packages/packages-lock.json') }}

      - name: Start the Unity docker container
        # 1. We use the host dotnet installation - it's much faster than installing inside the docker container.
        # 2. We must use the iOS version of the image instead of 'base' - Sentry.Unity.Editor.iOS.csproj requires some libraries.
        #    Maybe we could just cache the needed file instead of pulling the 1 GB larger image on every build...
        run: |
          image="unityci/editor:ubuntu-${{ steps.env.outputs.unityVersion }}-ios-1.0.1"
          docker run -td --name unity \
            -v ${{ github.workspace }}:/sentry-unity \
            -v /usr/share/dotnet:/usr/share/dotnet \
            -v /opt/microsoft/powershell/7:/opt/microsoft/powershell/7 \
            --workdir /sentry-unity $image
          docker exec unity ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet
          docker exec unity ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh

      - name: Download CLI
        run: pwsh ./scripts/download-sentry-cli.ps1

      - uses: vaind/download-artifact@989a39a417730897d098ab11c34e49ac4e13ed70
        with:
          name: Android-sdk
          path: package-dev/Plugins/Android
          wait-timeout: 3600

      - uses: vaind/download-artifact@989a39a417730897d098ab11c34e49ac4e13ed70
        with:
          name: Android-libraries
          path: modules/sentry-java/sentry-android-ndk/build/intermediates/merged_native_libs/release/out/lib
          wait-timeout: 3600

      - uses: vaind/download-artifact@989a39a417730897d098ab11c34e49ac4e13ed70
        with:
          name: iOS-sdk
          path: package-dev/Plugins/iOS
          wait-timeout: 3600

      - uses: vaind/download-artifact@989a39a417730897d098ab11c34e49ac4e13ed70
        with:
          name: macOS-sdk
          path: package-dev/Plugins/macOS
          wait-timeout: 3600

      - uses: vaind/download-artifact@989a39a417730897d098ab11c34e49ac4e13ed70
        with:
          name: Linux-sdk
          path: package-dev/Plugins/Linux
          wait-timeout: 3600

      - uses: vaind/download-artifact@989a39a417730897d098ab11c34e49ac4e13ed70
        with:
          name: Windows-sdk
          path: package-dev/Plugins/Windows
          wait-timeout: 3600

      - name: Create Unity license config
        run: |
          docker exec unity mkdir -p /usr/share/unity3d/config/
          echo '${{ secrets.UNITY_LICENSE_SERVER_CONFIG }}' | docker exec -i unity sh -c "cat > /usr/share/unity3d/config/services-config.json"

      - name: Build Sentry.Unity Solution
        run: docker exec unity dotnet build -c Release

      - name: Assembly alias
        run: |
          docker exec unity bash -c 'dotnet tool install --global Alias --version 0.4.3 && \
          ~/.dotnet/tools/assemblyalias --target-directory "package-dev/Runtime" --internalize --prefix "Sentry." --assemblies-to-alias "Microsoft*;System*"'

      - name: Update .meta files before packaging
        # We need to open & close Unity on the sample project to update .meta files in package-dev.
        # We could add a new custom target but reusing UnityConfigureSentryOptions is good enough.
        run: docker exec unity dotnet msbuild /t:UnityConfigureSentryOptions /p:Configuration=Release /p:OutDir=other src/Sentry.Unity

      - name: Prepare Sentry package for release
        shell: pwsh
        run: ./scripts/pack.ps1

      - name: Upload release artifacts
        uses: actions/upload-artifact@v2
        if: ${{ matrix.unity-version == env.LOWEST_SUPPORTED_UNITY_VERSION }}
        with:
          name: ${{ github.sha }}
          if-no-files-found: error
          # Adding the native libraries so the symbol collector craft target can find/upload them
          path: |
            package-release.zip
            modules/sentry-java/sentry-android-ndk/build/intermediates/merged_native_libs/release/out/lib/*

      - name: Run Unity tests (playmode)
        run: |
          docker exec unity dotnet msbuild /t:UnityConfigureSentryOptions /p:TestDsn= /p:Configuration=Release /p:OutDir=other src/Sentry.Unity
          docker exec unity dotnet msbuild /t:UnityPlayModeTest /p:Configuration=Release /p:OutDir=other test/Sentry.Unity.Tests

      - name: Upload test artifacts (playmode)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Test results (playmode)
          path: artifacts/test/playmode

      - name: Run Unity tests (editmode)
        run: docker exec unity dotnet msbuild /t:UnityEditModeTest /p:Configuration=Release /p:OutDir=other test/Sentry.Unity.Editor.Tests

      - name: Upload test artifacts (editmode)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Test results (editmode)
          path: artifacts/test/editmode

  # A Linux, docker-based build to prepare a game ("player") for some platforms. The tests run in `smoke-test-run`.
  smoke-test-build:
    name: Build ${{ matrix.platform }} Smoke Test - ${{ matrix.unity-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unity-version: ['2019', '2020', '2021']
        platform: ['Android', 'WebGL', 'Linux', 'iOS']
        include:
          - platform: Linux
            image-suffix: '-il2cpp'
    env:
      UNITY_PATH: docker exec unity unity-editor
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Load env
        id: env
        run: echo "::set-output name=unityVersion::$(pwsh ./scripts/ci-env.ps1 "unity${{ matrix.unity-version }}")"

      - run: echo "::add-mask::${{ secrets.LICENSE_SERVER_URL }}"

      - name: Start the Unity docker container
        run: |
          image="unityci/editor:ubuntu-${{ steps.env.outputs.unityVersion }}-${{ matrix.platform }}${{ matrix.image-suffix }}-1.0.1"
          image=$(echo "$image" | tr '[:upper:]' '[:lower:]')
          echo "Starting up a docker container with $image"
          docker run -td --name unity -v ${{ github.workspace }}:/sentry-unity --workdir /sentry-unity $image

      - name: Create Unity license config
        run: |
          docker exec unity mkdir -p /usr/share/unity3d/config/
          echo '${{ secrets.UNITY_LICENSE_SERVER_CONFIG }}' | docker exec -i unity sh -c "cat > /usr/share/unity3d/config/services-config.json"

      - name: Create new Project
        run: sudo pwsh ./test/Scripts.Integration.Test/integration-create-project.ps1 -UnityPath "${{ env.UNITY_PATH }}"

      - name: Build without Sentry SDK
        # This hasn't broken for many months, so disabling on PRs to speed up CI. And also to test a clean build with Sentry SDK included.
        if: ${{ github.ref_name == 'main' }}
        run: sudo pwsh ./test/Scripts.Integration.Test/integration-build-project.ps1 -UnityPath "${{ env.UNITY_PATH }}" -Platform "${{ matrix.platform }}"

      - name: Download UPM package
        uses: vaind/download-artifact@989a39a417730897d098ab11c34e49ac4e13ed70
        with:
          name: ${{ github.sha }}
          wait-timeout: 3600

      - name: Extract UPM package
        run: sudo pwsh ./test/Scripts.Integration.Test/integration-extract-package.ps1

      - name: Add Sentry to the project
        run: sudo pwsh ./test/Scripts.Integration.Test/integration-update-sentry.ps1 -UnityPath "${{ env.UNITY_PATH }}" -Platform "${{ matrix.platform }}"

      - name: Build with Sentry SDK
        run: sudo pwsh ./test/Scripts.Integration.Test/integration-build-project.ps1 -UnityPath "${{ env.UNITY_PATH }}" -Platform "${{ matrix.platform }}" ${{ matrix.platform != 'iOS' && '-CheckSymbols' || '' }} -UnityVersion "${{ matrix.unity-version }}"

      - name: Prepare for upload
        run: |
          cd samples/IntegrationTest/Build
          sudo chown -R $(id -u):$(id -g) .
          sudo rm -rf *_BackUpThisFolder_ButDontShipItWithYourGame

      - name: Upload test app for smoke test
        uses: actions/upload-artifact@v2
        with:
          name: testapp-${{ matrix.platform }}-${{ matrix.unity-version }}
          path: samples/IntegrationTest/Build
          if-no-files-found: error

      - name: Upload IntegrationTest project on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: failed-project-${{ matrix.platform }}-${{ matrix.unity-version }}
          path: samples/IntegrationTest

  package-validation:
    needs: [build]
    name: UPM Package validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Download UPM package
        uses: actions/download-artifact@v2
        with:
          # Artifact name is the commit sha. Which is what craft uses to find the relevant artifact.
          name: ${{ github.sha }}

      - name: Verify package content against snapshot
        shell: pwsh
        # If this step fails, you can accept the new file content by
        # running the following script locally with 'accept' as an argument
        # and committing the new snapshot file to your branch. i.e:
        # pwsh ./test/Scripts.Tests/test-pack-contents.ps1 accept
        run: ./test/Scripts.Tests/test-pack-contents.ps1

  desktop-smoke-test:
    name: Run ${{ matrix.os }} Smoke Test - ${{ matrix.unity-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        unity-version: ['2019', '2020', '2021']
        os: ['windows', 'macos']
        include:
          - os: windows
            unity-modules: windows-il2cpp
            unity-config-path: C:/ProgramData/Unity/config/
          - os: macos
            unity-modules: mac-il2cpp
            unity-config-path: /Library/Application Support/Unity/config/
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Load env
        id: env
        run: echo "::set-output name=unityVersion::$(./scripts/ci-env.ps1 "unity${{ matrix.unity-version }}")"

      - name: Setup Unity
        uses: getsentry/setup-unity@46c2e082d98cc3a825a5b59038cb31705fe9ff56
        with:
          unity-version: ${{ steps.env.outputs.unityVersion }}
          unity-modules: ${{ matrix.unity-modules }}

      - run: echo "::add-mask::${{ secrets.LICENSE_SERVER_URL }}"

      - name: Create Unity license config
        run: |
          New-Item -Path '${{ matrix.unity-config-path }}' -ItemType Directory
          Set-Content -Path '${{ matrix.unity-config-path }}services-config.json' -Value '${{ secrets.UNITY_LICENSE_SERVER_CONFIG }}'

      - name: Create new Project
        run: ./test/Scripts.Integration.Test/integration-create-project.ps1 -UnityPath "${{ env.UNITY_PATH }}"

      - name: Build without Sentry SDK
        # This hasn't broken for many months, so disabling on PRs to speed up CI. And also to test a clean build with Sentry SDK included.
        if: ${{ github.ref_name == 'main' }}
        run: ./test/Scripts.Integration.Test/integration-build-project.ps1 -UnityPath "${{ env.UNITY_PATH }}"

      - name: Download UPM package
        uses: vaind/download-artifact@989a39a417730897d098ab11c34e49ac4e13ed70
        with:
          # Artifact name is the commit sha. Which is what craft uses to find the relevant artifact.
          name: ${{ github.sha }}
          wait-timeout: 3600

      - name: Extract UPM package
        run: ./test/Scripts.Integration.Test/integration-extract-package.ps1

      - name: Add Sentry to test project
        run: ./test/Scripts.Integration.Test/integration-update-sentry.ps1 -UnityPath "${{ env.UNITY_PATH }}"

      - name: Build with Sentry SDK
        run: ./test/Scripts.Integration.Test/integration-build-project.ps1 -UnityPath "${{ env.UNITY_PATH }}" -CheckSymbols -UnityVersion "${{ matrix.unity-version }}"

      - name: Run Player - Smoke Test
        run: ./test/Scripts.Integration.Test/integration-run-smoke-test.ps1 -Smoke

      - name: Run Player - Crash Test
        run: ./test/Scripts.Integration.Test/integration-run-smoke-test.ps1 -Crash

  android-smoke-test:
    needs: [smoke-test-build]
    name: Run Android ${{ matrix.api-level }} Unity ${{ matrix.unity-version }} Smoke Test
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [21, 27, 29, 30]
        unity-version: ['2019', '2020', '2021']
        exclude:
          # API 21 is no longer supported since Unity 2021.2.10f1
          - api-level: 21
            unity-version: '2021'
          # Smoke test currently crashes on API 30 with Unity 2021 build on CI, see issue #719
          - api-level: 30
            unity-version: '2021'
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Download test app artifact
        uses: actions/download-artifact@v2
        with:
          name: testapp-Android-${{ matrix.unity-version }}
          path: samples/IntegrationTest/Build

      # outputs variables: version-label, api-level, target, arch
      - name: Configure Android Settings
        id: droid-settings
        shell: pwsh
        run: |
          # Setup API Level
          $apiLevel = '${{ matrix.api-level }}'
          if ( $apiLevel -eq 'latest')
          {
            # Gets the latest API level that isn't in Beta/Alpha
            $response = (Invoke-WebRequest -UseBasicParsing -Uri "https://developer.android.com/studio/releases/platforms").Content
            $result = [regex]::Match($response, " \(API level (?<model>\d+)\)")
            $apiLevel = $result.Groups["model"].Value
            Write-Output "Latest API is $apiLevel"
            echo "::set-output name=api-level::$apiLevel"
            echo "::set-output name=version-label::$apiLevel (latest)"
          }
          else
          {
            Write-Output "Current API is $apiLevel"
            echo "::set-output name=api-level::$apiLevel"
            echo "::set-output name=version-label::$arch"
          }
          # Setup Arch and Target
          $target = $apiLevel -ge 30 ? 'google_apis' : 'default'
          Write-Output "Current Target is $target"
          echo "::set-output name=target::$target"

      - name: Android API ${{ steps.droid-settings.outputs.version-label }} emulator  setup  + Smoke test
        id: smoke-test
        continue-on-error: true
        timeout-minutes: 30
        uses: reactivecircus/android-emulator-runner@76c2bf6f95ed6458fd659a1bdb680a0f8df232dc
        with:
          api-level: ${{ steps.droid-settings.outputs.api-level }}
          #api-level 30 image is only available with google services.
          target: ${{ steps.droid-settings.outputs.target }}
          force-avd-creation: false
          ram-size: 2048M
          arch: x86
          cores: 2
          disk-size: 4096M # Some runs have out of storage error when installing the smoke test.
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: sudo pwsh ./scripts/smoke-test-droid.ps1 -IsCI -IsIntegrationTest

      - name: Kill emulator if AVD failed.
        if: ${{ steps.smoke-test.outputs.smoke-status != 'Completed' }}
        run: |
          Write-Host "Smoke test failed with status (${{ steps.smoke-test.outputs.smoke-status }}), closing simulator."
          adb emu kill
          sleep 7

      - name: Android API ${{ steps.droid-settings.outputs.version-label }} emulator setup + Smoke test (Retry)
        id: smoke-test-retry
        continue-on-error: true
        timeout-minutes: 30
        # Retry the tests if the previous fail happened on the emulator startup.
        if: ${{ steps.smoke-test.outputs.smoke-status == 'Flaky' }}
        uses: reactivecircus/android-emulator-runner@76c2bf6f95ed6458fd659a1bdb680a0f8df232dc
        with:
          api-level: ${{ steps.droid-settings.outputs.api-level }}
          target: ${{ steps.droid-settings.outputs.target }}
          force-avd-creation: false
          ram-size: 2048M
          arch: x86
          cores: 2
          disk-size: 4096M # Some runs have out of storage error when installing the smoke test.
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: sudo pwsh ./scripts/smoke-test-droid.ps1 -IsCI -IsIntegrationTest

      - name: Throw error if Smoke test failed
        run: |
          $mainResult = '${{ steps.smoke-test.outputs.smoke-status }}'
          $retryResult = '${{ steps.smoke-test-retry.outputs.smoke-status }}'
          if (!($mainResult -eq 'Completed') -and !($mainResult -eq 'Flaky' -and $retryResult -eq 'Completed')) {
            Write-Error "Test: $mainResult; Retry: $retryResult"
          }

      - name: Upload screenshot if smoke test failed
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: testapp-android-screenshot-${{ matrix.api-level }}-${{ matrix.unity-version }}
          path: samples/IntegrationTest/Build/screen.png

  ios-smoke-test-build:
    needs: [smoke-test-build]
    name: Compile iOS Smoke Test - ${{ matrix.unity-version }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        unity-version: ['2019', '2020', '2021']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Download XCode app artifact
        uses: actions/download-artifact@v2
        with:
          name: testapp-iOS-${{ matrix.unity-version }}
          path: samples/IntegrationTest/Build

      - name: Build iOS package
        shell: pwsh
        run: ./Scripts/smoke-test-ios.ps1 Build -IsIntegrationTest -UnityVersi
on "${{ matrix.unity-version }}"

      - name: Upload iOS test app for smoke test.
        uses: actions/upload-artifact@v2
        with:
          name: testapp-iOS-compiled-${{ matrix.unity-version }}
          # Ignore the files that are not required for the test.
          path: |
            samples/IntegrationTest/Build/archive/Unity-iPhone/Build/Products/Release-iphonesimulator/
            !**/Release-iphonesimulator/*.dSYM
            !**/Release-iphonesimulator/UnityFramework.framework/*

  ios-smoke-test-run:
    needs: [ios-smoke-test-build]
    name: Run iOS ${{ matrix.ios-runtime }} Smoke Test - ${{ matrix.unity-version }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        unity-version: ['2019', '2020', '2021']
        # Numbers as string otherwise GH will reformat the runtime numbers removing the fractions.
        ios-runtime: ['12.0', '12.4', '13.0', '14.1', latest]
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Download app artifact
        uses: actions/download-artifact@v2
        with:
          name: testapp-iOS-compiled-${{ matrix.unity-version }}
          path: samples/IntegrationTest/Build/archive/Unity-iPhone/Build/Products/Release-iphonesimulator

      - name: Setup xcode-install
        # Github Virtual machine already sets the runtime and simulator for the latest release.
        if: ${{ matrix.ios-runtime != 'latest'}}
        run: gem install xcode-install

      - name: Setup ${{matrix.ios-runtime}} runtime
        if: ${{ matrix.ios-runtime != 'latest'}}
        run: xcversion simulators --install='iOS ${{matrix.ios-runtime}}'

      - name: Setup ${{matrix.ios-runtime}} Simulator
        if: ${{ matrix.ios-runtime != 'latest' }}
        # We need to setup an simulator in order to xCode to populate the simulators for the given runtime.
        run: xcrun simctl create InitialSimulator "iPhone 8" "iOS${{ matrix.ios-runtime }}"

      - name: Smoke test
        id: smoke-test-ios
        timeout-minutes: 10
        run: |
          $runtime = "${{ matrix.ios-runtime }}"
          If ($runtime -ne "latest")
          {
            $runtime = "iOS " + $runtime
          }
          ./Scripts/smoke-test-ios.ps1 Test "$runtime" -IsIntegrationTest

  smoke-test-run:
    needs: [smoke-test-build]
    name: Run  ${{ matrix.platform }} Unity ${{ matrix.unity-version }} Smoke Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unity-version: ['2019', '2020', '2021']
        platform: ['WebGL', 'Linux']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Download test app artifact
        uses: actions/download-artifact@v2
        id: download
        with:
          name: testapp-${{ matrix.platform }}-${{ matrix.unity-version }}
          path: samples/IntegrationTest/Build

      - name: Run (WebGL)
        if: ${{ matrix.platform == 'WebGL' }}
        timeout-minutes: 10
        run: |
          pip3 install --upgrade --user selenium urllib3 requests
          python3 scripts/smoke-test-webgl.py "${{steps.download.outputs.download-path}}"

      - name: Run (Linux)
        if: ${{ matrix.platform == 'Linux' }}
        run: pwsh ./test/Scripts.Integration.Test/integration-run-smoke-test.ps1 -Smoke -Crash

while scanning a simple key
  in "<file>", line 499, column 1
could not find expected ':'
  in "<file>", line 501, column 13
Detecting smells for /Users/nam/workflows/6d852ea88b27cc10254f423c1f014b5841e7b15845b7197b69f631e69c0fa6b1
We have found 8 smells
	- 2. Use commit hash instead of tags for action versions (line 76)
	- 2. Use commit hash instead of tags for action versions (line 279)
	- 2. Use commit hash instead of tags for action versions (line 63)
	- 2. Use commit hash instead of tags for action versions (line 159)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 16)
	- 15. Use fixed version for runs-on argument (line 364)
	- 15. Use fixed version for runs-on argument (line 294)
The following styling errors were found: 
8:22: too few spaces before comment: expected 2 (comments)
20:86: too few spaces before comment: expected 2 (comments)
426:12: missing starting space in comment (comments)
432:28: too few spaces before comment: expected 2 (comments)
458:28: too few spaces before comment: expected 2 (comments)
501:13: syntax error: could not find expected ':' (syntax)
Detecting smells for /Users/nam/workflows/d04a63422fbfa3db4d932ff203ca7d66bbd2ab3b91bee2a1f1ac30553dc03cf0
We have found 26 smells
	- 1. Define permissions for workflows with external actions (job at line: 70)
	- 1. Define permissions for workflows with external actions (job at line: 7)
	- 1. Define permissions for workflows with external actions (job at line: 49)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 2. Use commit hash instead of tags for action versions (line 24)
	- 2. Use commit hash instead of tags for action versions (line 79)
	- 2. Use commit hash instead of tags for action versions (line 65)
	- 2. Use commit hash instead of tags for action versions (line 44)
	- 2. Use commit hash instead of tags for action versions (line 14)
	- 2. Use commit hash instead of tags for action versions (line 73)
	- 5. Avoid jobs without timeouts (line: 70)
	- 5. Avoid jobs without timeouts (line: 7)
	- 5. Avoid jobs without timeouts (line: 49)
	- 11. Use 'if' for upload-artifact action (line 45)
	- 11. Use 'if' for upload-artifact action (line 66)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 8)
	- 16. Use names for run steps (lines -1:81)
	- 16. Use names for run steps (lines -1:66)
	- 16. Use names for run steps (lines 25:25)
	- 16. Use names for run steps (lines -1:45)
	- 16. Use names for run steps (lines -1:15)
	- 16. Use names for run steps (lines -1:74)
	- 18. Steps should only perform a single command (line -1)
	- 19. Run tests on multiple OS's (job: build_sdist)
The following styling errors were found: 
38:13: trailing spaces (trailing-spaces)
41:40: trailing spaces (trailing-spaces)
Unable to parse yaml file: # This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish Docker
        uses: elgohr/Publish-Docker-Github-Action@2.11
        with:
          # The name of the image you would like to push
          name: ${{secrets.DOCKER_PROGRAM}}
          # The login username for the registry
          username: ${{secrets.DOCKER_USERNAME}}
          # The login password for the registry
          password: ${{secrets.DOCKER_PWD}}
          # Use registry for pushing to a custom registry
          registry: ${{secrets.DOCKER_REGISTRY}}

mapping values are not allowed here
  in "<file>", line 29, column 13
Detecting smells for /Users/nam/workflows/49687af6dfda915f58cc0dc36db13082adbb62e8930326809023117cf1cf1226
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 17)
	- 2. Use commit hash instead of tags for action versions (line 28)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 14)
The following styling errors were found: 
8:16: too many spaces inside brackets (brackets)
8:23: too many spaces inside brackets (brackets)
10:16: too many spaces inside brackets (brackets)
10:23: too many spaces inside brackets (brackets)
18:5: wrong indentation: expected 6 but found 4 (indentation)
29:13: syntax error: mapping values are not allowed here (syntax)
Unable to parse yaml file: name: ci-build
on:
  push:
    branches:
      - master
    tags-ignore:
      - '*.*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: build-and-testing
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: install-java11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: build-gradle
        run: ./gradlew build test install --build-cache --scan -s
      - name: Archive test results
          uses: actions/upload-artifact@v1
          with:
            name: build
            path: build
      - name: integration-test
        if: runner.os != 'Windows'
        run: |
          export PATH=`pwd`/build/install/jbang/bin:$PATH
          cd src/test/resources
          ./test_suite.sh

mapping values are not allowed here
  in "<file>", line 34, column 15
Detecting smells for /Users/nam/workflows/97b297a112d2efc43408ad9a25217145b290db8dfe368c119ed6fc87713519f4
We have found 6 smells
	- 2. Use commit hash instead of tags for action versions (line 27)
	- 2. Use commit hash instead of tags for action versions (line 33)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 2. Use commit hash instead of tags for action versions (line 20)
	- 14. Avoid incorrectly formatted workflows
	- 21. Avoid workflows without comments
The following styling errors were found: 
34:15: syntax error: mapping values are not allowed here (syntax)
Detecting smells for /Users/nam/workflows/55c87a3ab6dd1fb82c5c96d93cf0e81201ec3c8cc53b87a8b45cad58272409dc
We have found 17 smells
	- 1. Define permissions for workflows with external actions (job at line: 17)
	- 1. Define permissions for workflows with external actions (job at line: 78)
	- 2. Use commit hash instead of tags for action versions (line 47)
	- 2. Use commit hash instead of tags for action versions (line 21)
	- 2. Use commit hash instead of tags for action versions (line 55)
	- 2. Use commit hash instead of tags for action versions (line 34)
	- 5. Avoid jobs without timeouts (line: 78)
	- 5. Avoid jobs without timeouts (line: 17)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 18)
	- 16. Use names for run steps (lines 22:22)
	- 18. Steps should only perform a single command (line -1)
The following styling errors were found: 
26:41: trailing spaces (trailing-spaces)
30:40: trailing spaces (trailing-spaces)
36:14: trailing spaces (trailing-spaces)
57:13: trailing spaces (trailing-spaces)
69:13: trailing spaces (trailing-spaces)
97:14: trailing spaces (trailing-spaces)
114:14: too many spaces after colon (colons)
118:13: trailing spaces (trailing-spaces)
129:13: trailing spaces (trailing-spaces)
138:7: no new line character at the end of file (new-line-at-end-of-file)
138:1: trailing spaces (trailing-spaces)
Unable to parse yaml file: name: 📦 Compressed Size

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

    - uses: actions/checkout@v2
    - uses: preactjs/compressed-size-action@v2
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        pattern: "./packages/s2-core/dist/**/*.{js,css}"
        build-script: "build"

mapping values are not allowed here
  in "<file>", line 17, column 11
Detecting smells for /Users/nam/workflows/7f2730186d9c40b8dfd4dade8840ac11a34451e562a146a7174ed580d9eb20b2
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 15)
	- 2. Use commit hash instead of tags for action versions (line 24)
	- 2. Use commit hash instead of tags for action versions (line 23)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 7)
The following styling errors were found: 
12:5: wrong indentation: expected 6 but found 4 (indentation)
17:11: syntax error: mapping values are not allowed here (syntax)
Unable to parse yaml file: name: 48 - Wait for Reusable Completion

on:
  workflow_call:

jobs:
  job-reusable-1:
    runs-on: ubuntu-latest
    steps:
      - run: |
        echo "Waiting 1 minute..."
        sleep 60
        echo "Hello World"
while scanning a simple key
  in "<file>", line 11, column 9
could not find expected ':'
  in "<file>", line 12, column 9
Detecting smells for /Users/nam/workflows/f1ed75c9e966912b5fa15e41ec1955dad84b0785cdd27fbc1b5176877a63bb76
We have found 3 smells
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 7)
	- 21. Avoid workflows without comments
The following styling errors were found: 
12:9: syntax error: could not find expected ':' (syntax)
Detecting smells for /Users/nam/workflows/be00dc1093b4f41938da5dccfd7d197e652ee667650e4a370709568ac50ca122
We have found 16 smells
	- 1. Define permissions for workflows with external actions (job at line: 10)
	- 1. Define permissions for workflows with external actions (job at line: 37)
	- 2. Use commit hash instead of tags for action versions (line 41)
	- 2. Use commit hash instead of tags for action versions (line 14)
	- 2. Use commit hash instead of tags for action versions (line 31)
	- 2. Use commit hash instead of tags for action versions (line 48)
	- 5. Avoid jobs without timeouts (line: 10)
	- 5. Avoid jobs without timeouts (line: 37)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 11. Use 'if' for upload-artifact action (line 32)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 11)
	- 18. Steps should only perform a single command (line -1)
	- 20. Avoid installing packages without version (line -1)
The following styling errors were found: 
9:1: comment not indented like content (comments-indentation)
38:9: wrong indentation: expected 4 but found 8 (indentation)
41:9: wrong indentation: expected 10 but found 8 (indentation)
Unable to parse yaml file: name: CI

on:
  pull_request:
    branches:
    - v2

jobs:
  changedfiles:
    runs-on: ubuntu-latest
    outputs:
      all: ${{ steps.changes.outputs.all}}
    steps:
        uses: actions/checkout@v2
          with:
            fetch-depth: 0
      - name: Get changed files
        id: changes
        run: |
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep packages/ | xargs)"
  preview-publish:
    runs-on: ubuntu-latest
    needs: changedfiles
    if: ${{needs.changedfiles.outputs.ts}}
    steps:
      uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: npm
    - uses: actions/github-script@v5
    - name: install dependencies
      run: cd $GITHUB_WORKSPACE && npm i
    - name: publish preview version
      run: echo 'Not ready yet'
      # run: cd $GITHUB_WORKSPACE && npx tsx scripts/run_publish.ts ${{needs.changedfiles.outputs.ts}}

mapping values are not allowed here
  in "<file>", line 15, column 15
Detecting smells for /Users/nam/workflows/57f26ac48727bbe17eb809521c343e03609e168ceb8fd10ca6e93e6ac1defd05
We have found 6 smells
	- 2. Use commit hash instead of tags for action versions (line 13)
	- 2. Use commit hash instead of tags for action versions (line 30)
	- 2. Use commit hash instead of tags for action versions (line 26)
	- 2. Use commit hash instead of tags for action versions (line 25)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 9)
The following styling errors were found: 
6:5: wrong indentation: expected 6 but found 4 (indentation)
14:9: wrong indentation: expected 6 but found 8 (indentation)
15:15: syntax error: mapping values are not allowed here (syntax)
Unable to parse yaml file: name: Build and push release Docker images
on:
  release:
    types: [published]
jobs:
  push_to_registries:
    name: Push to GitHub Packages and Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          repository: koillection/koillection-docker
          ref: master
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to Docker Hub
          uses: docker/build-push-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            repository: koillection/koillection
            tags: |
              latest
              ${{ github.event.release.tag_name }}
            build_args: |
              GITHUB_RELEASE=${{ github.event.release.tag_name }}
      - name: Push to GitHub Packages
          uses: docker/build-push-action@v1
          with:
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
            registry: docker.pkg.github.com
            repository: koillection/koillection/fpm
            tags: |
              latest
              ${{ github.event.release.tag_name }}
            build_args: |
              GITHUB_RELEASE=${{ github.event.release.tag_name }}

mapping values are not allowed here
  in "<file>", line 18, column 15
Detecting smells for /Users/nam/workflows/7f5c134cf372dd5636d2ca98df66fcbd4daa38ba8b23dfd3b58b8218fdb74823
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 10)
	- 2. Use commit hash instead of tags for action versions (line 17)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 7)
	- 21. Avoid workflows without comments
The following styling errors were found: 
18:15: syntax error: mapping values are not allowed here (syntax)
Detecting smells for /Users/nam/workflows/9e3d60ff0120be503cce11eb1ea8498f7e6cbd329725f7185b6b067b1df9157a
We have found 5 smells
	- 5. Avoid jobs without timeouts (line: 11)
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 11)
	- 18. Steps should only perform a single command (line -1)
	- 21. Avoid workflows without comments
Unable to parse yaml file: name: Release
on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  retreive-next-release-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
        with:
          submodules: true
      - name: semantic-release extract new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/changelog @semantic-release/git semantic-release/exec
          echo "version=$(npx semantic-release --dryRun grep -oP 'Published release \K.*? ')" >> "$GITHUB_OUTPUT"
      outputs:
        version: ${{ steps.step1.outputs.version }}

  call-workflow-in-local-repo:
    needs: retreive-next-release-version
    uses: ./.github/workflows/build-images-workflow.yaml
    with:
      set_new_images_as_latest: false
      push: true
      new_images_tag: ${{needs.retreive-next-release-version.outputs.version}}
      ref: ${{needs.retreive-next-release-version.outputs.version}}

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
        with:
          submodules: true

      - name: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/changelog @semantic-release/git semantic-release/exec
          npx semantic-release

      - name: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run : |
          npm install @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/changelog @semantic-release/git semantic-release/exec
          npx semantic-release
while parsing a block collection
  in "<file>", line 13, column 7
expected <block end>, but found '?'
  in "<file>", line 23, column 7
Detecting smells for /Users/nam/workflows/c319c6babb1026ac826faa36eb401564813623ef7f60f0d3b056c7377571f1fa
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 12)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 10)
	- 21. Avoid workflows without comments
The following styling errors were found: 
23:7: syntax error: expected <block end>, but found '?' (syntax)
24:9: wrong indentation: expected 10 but found 8 (indentation)
53:12: too many spaces before colon (colons)
55:31: no new line character at the end of file (new-line-at-end-of-file)
Detecting smells for /Users/nam/workflows/e4c981ced1f688787e6c31edf4d2e1a58b4ab4c8b060d46eb708a476df772b77
We have found 17 smells
	- 1. Define permissions for workflows with external actions (job at line: 25)
	- 1. Define permissions for workflows with external actions (job at line: 7)
	- 1. Define permissions for workflows with external actions (job at line: 45)
	- 2. Use commit hash instead of tags for action versions (line 10)
	- 2. Use commit hash instead of tags for action versions (line 18)
	- 5. Avoid jobs without timeouts (line: 45)
	- 5. Avoid jobs without timeouts (line: 7)
	- 5. Avoid jobs without timeouts (line: 25)
	- 11. Use 'if' for upload-artifact action (line 19)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 7)
	- 15. Use fixed version for runs-on argument (line 25)
	- 16. Use names for run steps (lines -1:19)
	- 16. Use names for run steps (lines 11:11)
	- 18. Steps should only perform a single command (line -1)
	- 21. Avoid workflows without comments
The following styling errors were found: 
11:5: wrong indentation: expected 6 but found 4 (indentation)
29:5: wrong indentation: expected 6 but found 4 (indentation)
49:5: wrong indentation: expected 6 but found 4 (indentation)
Detecting smells for /Users/nam/workflows/b3862d3d9b8b8d206a87f9397995bd8723cb9ba203e1d88ccdd884f0523ec5a5
We have found 11 smells
	- 1. Define permissions for workflows with external actions (job at line: 10)
	- 2. Use commit hash instead of tags for action versions (line 13)
	- 2. Use commit hash instead of tags for action versions (line 18)
	- 2. Use commit hash instead of tags for action versions (line 29)
	- 5. Avoid jobs without timeouts (line: 10)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 10)
	- 21. Avoid workflows without comments
The following styling errors were found: 
7:21: trailing spaces (trailing-spaces)
8:1: trailing spaces (trailing-spaces)
13:5: wrong indentation: expected 6 but found 4 (indentation)
18:27: trailing spaces (trailing-spaces)
38:1: trailing spaces (trailing-spaces)
Unable to parse yaml file: name: CI-web-app

on:
  push:
    branches:
      - dev
      - main
    paths:
      - "apps/web-app/**"
      - "packages/**"
      - "package.json"
      - "tsconfig.base.json"
      - "yarn.lock"
      - ".yarnrc.yml"
      - ".github/workflows/**"
      - ".eslintrc.base.json"
      - ".eslintignore"

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    # Optional:
    #   Only consider those files/paths to trigger the github action
    #   to prevent unnecessary builds.
    paths:
      - "apps/web-app/**"
      - "packages/**"
      - "package.json"
      - "tsconfig.base.json"
      - "yarn.lock"
      - ".yarnrc.yml"
      - ".github/workflows/**"
      - ".eslintrc.base.json"
      - ".eslintignore"
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Restore nextjs build web-app from cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/apps/web-app/.next/cache
          key: ${{ runner.os }}-nextjs-web-app-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: |
          yarn install --immutable

      - name: Check for duplicate dependencies in lock file
        run: |
          yarn dedupe --check

      #- name: Generate Prisma client
      #  working-directory: apps/web-app
      #  run: |
      #    yarn prisma generate

      - name: Typecheck
        working-directory: apps/web-app
        run: |
          yarn typecheck

      - name: Linter
        working-directory: apps/web-app
        run: |
          yarn lint

      - name: Unit tests
        working-directory: apps/web-app
        run: |
          yarn ci-test:unit

      - name: Build web-app
        working-directory: apps/web-app
        run: |
          yarn build
        env:
          NEXTJS_BUILD_TARGET: server
          # Speed up build cause they are linted in a previous step
          NEXTJS_IGNORE_ESLINT: 1
          # Speed up build by not running sourcemap upload (not even dry-run)
          # Disable sourcemaps will speed up ci
          # be sure to disable it if you intent to use the build
          # done in this step (i.e: deploy, docker....)
          NEXT_DISABLE_SOURCEMAPS: 1
          NEXT_TELEMETRY_DISABLED: 0
          # Fully disable sentry registration here (no overhead in build time)
          NEXT_DISABLE_SENTRY=1
          # Disable sentry source map upload (when not needed)
          NEXT_SENTRY_DRY_RUN=1

      - name: Check bundle size
        working-directory: apps/web-app
        run: |
          yarn bundle:check-size


while scanning a simple key
  in "<file>", line 101, column 11
could not find expected ':'
  in "<file>", line 102, column 11
Detecting smells for /Users/nam/workflows/98cc10ab1759348b1bfee5d3e892ad08243b1d2d31e6e2880387780c0ffe02ba
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 46)
	- 2. Use commit hash instead of tags for action versions (line 43)
	- 2. Use commit hash instead of tags for action versions (line 52)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 38)
The following styling errors were found: 
66:8: missing starting space in comment (comments)
109:1: too many blank lines (1 > 0) (empty-lines)
102:11: syntax error: could not find expected ':' (syntax)
Detecting smells for /Users/nam/workflows/94339de56a3526f6a3731f253ada26d033009a13877992a4a0df32f0a03ac04c
We have found 25 smells
	- 1. Define permissions for workflows with external actions (job at line: 56)
	- 1. Define permissions for workflows with external actions (job at line: 171)
	- 1. Define permissions for workflows with external actions (job at line: 134)
	- 1. Define permissions for workflows with external actions (job at line: 99)
	- 1. Define permissions for workflows with external actions (job at line: 190)
	- 1. Define permissions for workflows with external actions (job at line: 16)
	- 2. Use commit hash instead of tags for action versions (line 88)
	- 2. Use commit hash instead of tags for action versions (line 26)
	- 2. Use commit hash instead of tags for action versions (line 38)
	- 2. Use commit hash instead of tags for action versions (line 24)
	- 5. Avoid jobs without timeouts (line: 99)
	- 5. Avoid jobs without timeouts (line: 190)
	- 5. Avoid jobs without timeouts (line: 171)
	- 5. Avoid jobs without timeouts (line: 134)
	- 5. Avoid jobs without timeouts (line: 56)
	- 5. Avoid jobs without timeouts (line: 16)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 191)
	- 15. Use fixed version for runs-on argument (line 172)
	- 17. Use cache parameter instead of cache option
	- 18. Steps should only perform a single command (line -1)
The following styling errors were found: 
22:16: too many spaces inside brackets (brackets)
22:41: too many spaces inside brackets (brackets)
62:18: too many spaces inside brackets (brackets)
62:28: too many spaces inside brackets (brackets)
105:19: too many spaces inside brackets (brackets)
105:44: too many spaces inside brackets (brackets)
140:19: too many spaces inside brackets (brackets)
140:58: too many spaces inside brackets (brackets)
Unable to parse yaml file: name: Build library

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: macos-latest
    
    env:
      MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
        server-id: sonatype-nexus-snapshots
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
      
     - name: Install dependencies
       run: |
         brew install openssl
         brew install autoconf
         brew install automake
         brew install libtool
         brew install cmake
     - name: build natives
       run: ./build.sh
     - name: Maven deploy
       run: mvn clean deploy
    - name: Gradle plugin deploy
      run: cd plugins/gradle && ./gradlew clean build uploadArchives

while parsing a block mapping
  in "<file>", line 12, column 5
expected <block end>, but found '<block sequence start>'
  in "<file>", line 28, column 6
Detecting smells for /Users/nam/workflows/505c05a4961dbd4373bd6b7592ef4ba2d4eca3ac53edf5884f1a3567fcfed660
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 18)
	- 2. Use commit hash instead of tags for action versions (line 20)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 11)
	- 21. Avoid workflows without comments
The following styling errors were found: 
5:16: too many spaces inside brackets (brackets)
5:23: too many spaces inside brackets (brackets)
7:16: too many spaces inside brackets (brackets)
7:23: too many spaces inside brackets (brackets)
13:1: trailing spaces (trailing-spaces)
19:5: wrong indentation: expected 6 but found 4 (indentation)
27:1: trailing spaces (trailing-spaces)
28:6: syntax error: expected <block end>, but found '<block sequence start>' (syntax)
Detecting smells for /Users/nam/workflows/939b75fbe40b8dd5d9282de69cb1094348a436b52dc2d4cbcefcdf78a1c47a7d
We have found 14 smells
	- 1. Define permissions for workflows with external actions (job at line: 10)
	- 2. Use commit hash instead of tags for action versions (line 15)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 5. Avoid jobs without timeouts (line: 10)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 11)
	- 16. Use names for run steps (lines -1:16)
	- 19. Run tests on multiple OS's (job: build)
	- 21. Avoid workflows without comments
	- 22. Run CI on multiple language versions (job: build)
The following styling errors were found: 
5:16: too many spaces inside brackets (brackets)
5:23: too many spaces inside brackets (brackets)
7:16: too many spaces inside brackets (brackets)
7:23: too many spaces inside brackets (brackets)
15:5: wrong indentation: expected 6 but found 4 (indentation)
18:11: wrong indentation: expected 8 but found 10 (indentation)
Unable to parse yaml file: name: labeled issue auto move

on:
  issues:
    types: [labeled]

jobs:
  Move_Labeled_Issue_On_Project_Board:
    runs-on: ubuntu-latest
    steps:
    - name: Move meta issue ticket to the Meta issues column
      uses: konradpabjan/move-labeled-or-milestoned-issue@v2.0
      with:
        project-url: "https://github.com/centerofci/mathesar/projects/2"
        label-name: "type: meta"
        column-name: "Meta issues"
        columns-to-ignore: "Meta issues"
        action-token: "${{ secrets.MATHESAR_GITHUB_TOKEN }}"

    - name: Move ready ticket to the Ready column
      uses: konradpabjan/move-labeled-or-milestoned-issue@v2.0
      with:
        project-url: "https://github.com/centerofci/mathesar/projects/2"
        label-name: "status: ready"
        column-name: "Ready"
        columns-to-ignore: "Meta issues, Ready"
        action-token: "${{ secrets.MATHESAR_GITHUB_TOKEN }}"

    - name: Move detail needed ticket to the Detail needed column
      uses: konradpabjan/move-labeled-or-milestoned-issue@v2.0
      with:
        project-url: "https://github.com/centerofci/mathesar/projects/2"
        label-name: "status: draft
        column-name: "Draft"
        columns-to-ignore: "Meta issues, Draft"
        action-token: "${{ secrets.MATHESAR_GITHUB_TOKEN }}"

    - name: Move blocked ticket to the Blocked column
      uses: konradpabjan/move-labeled-or-milestoned-issue@v2.0
      with:
        project-url: "https://github.com/centerofci/mathesar/projects/2"
        label-name: "status: blocked"
        column-name: "Blocked"
        columns-to-ignore: "Meta issues, Blocked"
        action-token: "${{ secrets.MATHESAR_GITHUB_TOKEN }}"

    - name: Remove future ticket from Backlog project
      uses: justgiveacar/move-labeled-or-milestoned-issue@v3.0
      with:
        project-url: "https://github.com/centerofci/mathesar/projects/1"
        label-name: "status: future"
        delete-card: "true"
        action-token: "${{ secrets.MATHESAR_GITHUB_TOKEN }}"

    - name: Move future ticket to Future project
      uses: konradpabjan/move-labeled-or-milestoned-issue@v2.0
      with:
        project-url: "https://github.com/centerofci/mathesar/projects/2"
        label-name: "status: future"
        column-name: "Triage"
        action-token: "${{ secrets.MATHESAR_GITHUB_TOKEN }}"

while parsing a block mapping
  in "<file>", line 32, column 9
expected <block end>, but found '<scalar>'
  in "<file>", line 34, column 23
Detecting smells for /Users/nam/workflows/1f9a02127b6b8af78cc9bdcb60f0cda866a7672f42ddfc376c246f0774cdd179
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 47)
	- 2. Use commit hash instead of tags for action versions (line 11)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 8)
	- 21. Avoid workflows without comments
The following styling errors were found: 
11:5: wrong indentation: expected 6 but found 4 (indentation)
34:23: syntax error: expected <block end>, but found '<scalar>' (syntax)
Detecting smells for /Users/nam/workflows/f8fdae6509715a8a18f70e23a9df6dc6dc7b8dd395347a7b2f85624e06052b3c
We have found 15 smells
	- 1. Define permissions for workflows with external actions (job at line: 8)
	- 2. Use commit hash instead of tags for action versions (line 26)
	- 2. Use commit hash instead of tags for action versions (line 12)
	- 3. Use permissions whenever using Github Token (job at line 8)
	- 4. Prevent running issue/PR actions on forks line -1:43
	- 5. Avoid jobs without timeouts (line: 8)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 8)
	- 16. Use names for run steps (lines 15:15)
	- 16. Use names for run steps (lines 17:17)
	- 16. Use names for run steps (lines 13:13)
	- 18. Steps should only perform a single command (line -1)
	- 21. Avoid workflows without comments
Unable to parse yaml file: name: C/C++ CI windows

on: [push]

jobs:
  build:

    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v1

    - name: pkg
      shell: cmd
      run: choco install  --ignore-detected-reboot --no-progress -y visualstudio2017buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Workload.NativeDesktop --add Microsoft.VisualStudio.Component.VC.ATLMFC --includeRecommended --nocache --installPath %MSVC_PATH%"
      env:
        MSVC_PATH: "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community"

    - name: depot_tools
      run: git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git

    - name: fetch webrtc
      shell: cmd
      run: |
          set "PATH=%PATH%;%GITHUB_WORKSPACE%\depot_tools"
          git config --global core.autocrlf false 
          git config --global core.filemode false 
          mkdir webrtc
          pushd webrtc
          fetch --no-history webrtc
          popd
      env:
        DEPOT_TOOLS_WIN_TOOLCHAIN: 0
        CLANG_VERSION: ToT
        PYTHONIOENCODING: UTF-8
        GCLIENT_PY3: 1

    - name: cmake
      shell: cmd
      run: |
          set "PATH=%PATH%;%GITHUB_WORKSPACE%\depot_tools;%GITHUB_WORKSPACE%\webrtc\src\third_party\llvm-build\Release+Asserts\bin;%GITHUB_WORKSPACE%\webrtc\src\build\toolchain\win\rc\win"
          call "%MSVC_PATH%\VC\Auxiliary\Build\vcvars64.bat" 
          set
          cmake -G Ninja -DCMAKE_C_COMPILER=clang-cl.exe -DCMAKE_CXX_COMPILER=clang-cl.exe -DWEBRTCROOT=./webrtc .
          ninja 
      env:
        MSVC_PATH: "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community"

    - name: cpack 
      run: cpack       

while scanning a double-quoted scalar
  in "<file>", line 17, column 20
found unknown escape character 'M'
  in "<file>", line 17, column 44
Detecting smells for /Users/nam/workflows/5230c422615ff5bd53acf22afc3bb3bae553367b1930d49f78bcacf79ff60908
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 10)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 7)
	- 21. Avoid workflows without comments
The following styling errors were found: 
9:1: trailing spaces (trailing-spaces)
11:5: wrong indentation: expected 6 but found 4 (indentation)
17:44: syntax error: found unknown escape character 'M' (syntax)
27:50: trailing spaces (trailing-spaces)
42:61: trailing spaces (trailing-spaces)
45:16: trailing spaces (trailing-spaces)
49:18: trailing spaces (trailing-spaces)
50:17: trailing spaces (trailing-spaces)
Detecting smells for /Users/nam/workflows/8eb749771ffc0bcfc0e7247670dd78e626c1fd0312f96378846def2327cdabf0
We have found 7 smells
	- 1. Define permissions for workflows with external actions (job at line: 11)
	- 5. Avoid jobs without timeouts (line: 11)
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 11)
The following styling errors were found: 
4:5: comment not indented like content (comments-indentation)
49:1: trailing spaces (trailing-spaces)
Detecting smells for /Users/nam/workflows/ea48012d617ec5b4f0f594f51a8c58712236d054e94ab1b2057bf5c254c706d2
We have found 22 smells
	- 1. Define permissions for workflows with external actions (job at line: 42)
	- 1. Define permissions for workflows with external actions (job at line: 18)
	- 2. Use commit hash instead of tags for action versions (line 47)
	- 2. Use commit hash instead of tags for action versions (line 21)
	- 2. Use commit hash instead of tags for action versions (line 23)
	- 5. Avoid jobs without timeouts (line: 18)
	- 5. Avoid jobs without timeouts (line: 42)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 18)
	- 16. Use names for run steps (lines -1:-1)
	- 16. Use names for run steps (lines 52:52)
	- 16. Use names for run steps (lines 22:22)
	- 16. Use names for run steps (lines 49:49)
	- 16. Use names for run steps (lines 55:55)
	- 18. Steps should only perform a single command (line -1)
	- 19. Run tests on multiple OS's (job: build)
	- 21. Avoid workflows without comments
	- 22. Run CI on multiple language versions (job: build)
The following styling errors were found: 
22:5: wrong indentation: expected 6 but found 4 (indentation)
50:1: trailing spaces (trailing-spaces)
53:1: trailing spaces (trailing-spaces)
Unable to parse yaml file: # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node-version: [12, 14, 16]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-wechaty-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-wechaty-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run build --if-present
    - run: npm test
      env:
        CI: true
   - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

while parsing a block mapping
  in "<file>", line 13, column 3
expected <block end>, but found '<block sequence start>'
  in "<file>", line 38, column 4
Detecting smells for /Users/nam/workflows/5a1bd047e6210fe70330e93d5dbff0061c93945cfeead51eafbb06daf7680005
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 29)
	- 2. Use commit hash instead of tags for action versions (line 21)
	- 2. Use commit hash instead of tags for action versions (line 20)
	- 14. Avoid incorrectly formatted workflows
The following styling errors were found: 
8:16: too many spaces inside brackets (brackets)
8:21: too many spaces inside brackets (brackets)
10:16: too many spaces inside brackets (brackets)
10:21: too many spaces inside brackets (brackets)
21:5: wrong indentation: expected 6 but found 4 (indentation)
38:4: syntax error: expected <block end>, but found '<block sequence start>' (syntax)
Detecting smells for /Users/nam/workflows/b135777e54b2f6e1d8ba74c72cf0570bf7107d1d367c048684c2e278663c0c95
We have found 15 smells
	- 1. Define permissions for workflows with external actions (job at line: 10)
	- 2. Use commit hash instead of tags for action versions (line 13)
	- 2. Use commit hash instead of tags for action versions (line 12)
	- 5. Avoid jobs without timeouts (line: 10)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 10)
	- 16. Use names for run steps (lines 17:17)
	- 16. Use names for run steps (lines 18:18)
	- 16. Use names for run steps (lines 13:13)
	- 16. Use names for run steps (lines -1:14)
	- 19. Run tests on multiple OS's (job: build)
	- 21. Avoid workflows without comments
	- 22. Run CI on multiple language versions (job: build)
Unable to parse yaml file: name: Test & Deploy

on:
  push:
    branches:
    - master

jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Set node version
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Install
      run: |
        npm install
        export NODE_OPTIONS=--max_old_space_size=2048

  lint:
    needs: setup
    runs-on: ubuntu-latest

    - name: Lint
      run: npx grunt lint

  tests:
    needs: setup
    runs-on: ubuntu-latest
    - name: Unit Tests
      run: |
        npm test
        npx grunt testnodeconsumer

  build:
    needs: [lint, tests]
    runs-on: ubuntu-latest

    - name: Production Build
      run: npx grunt prod
    - name: Generate sitemap
      run: npx grunt exec:sitemap

  ui-tests:
    needs: build
    runs-on: ubuntu-latest
    - name: UI Tests
      run: xvfb-run --server-args="-screen 0 1200x800x24" npx grunt testui


    # - name: grunt copy:ghPages
    # - name: Deploy
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./build/prod
    # Once NPM_AUTH_TOKEN set up in repo, uncomment this
    #- name: Deploy to NPM
    #    run: |
    #      npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
    #      npm publish || true
    #    env:
    # Add NPM publish token to the repo secrets
    #      NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }} 

while parsing a block mapping
  in "<file>", line 24, column 5
expected <block end>, but found '-'
  in "<file>", line 27, column 5
Detecting smells for /Users/nam/workflows/c7fc8cb7de967ecd94ae033d7898b11554b626ac5bab0dcfae949b359ad2fdfb
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 12)
	- 2. Use commit hash instead of tags for action versions (line 14)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 9)
The following styling errors were found: 
6:5: wrong indentation: expected 6 but found 4 (indentation)
11:1: trailing spaces (trailing-spaces)
13:5: wrong indentation: expected 6 but found 4 (indentation)
27:5: syntax error: expected <block end>, but found '-' (syntax)
61:6: missing starting space in comment (comments)
67:52: trailing spaces (trailing-spaces)
Unable to parse yaml file: name: Seed Chain

on:
  workflow_call:
    inputs:
      chain-api-url:
        required: true
        type: string
      chain-id:
        required: true
        type: string
      seed-script-filename:
        required: true
        type: string
      erc20-deployer-network-name:
        required: true
        type: string
      genesis_validator_addresses:
        required: true
        type: string
      kava_version_filepath:
        required: true
        type: string
    secrets:
      DEV_WALLET_MNEMONIC:
        required: true

jobs:
  seed-chain-state:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo from master
        uses: actions/checkout@v3
        with:
         ref: master
      - name: checkout version of kava used by network
        run: |
          git pull -p
          git checkout $(cat ${KAVA_VERSION_FILEPATH})
         env:
            KAVA_VERSION_FILEPATH: ${{ inputs.kava_version_filepath }}
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          check-latest: true
          cache: true
      - name: build kava binary
        run: make install
      - name: checkout go evm tools repo
        uses: actions/checkout@v3
        with:
          repository: ethereum/go-ethereum
          path: go-ethereum
          ref: v1.10.26
      - name: install go evm tools
        run: |
          make
          make devtools
        working-directory: go-ethereum
      - name: checkout kava bridge repo for deploying evm contracts
        uses: actions/checkout@v3
        with:
          repository: Kava-Labs/kava-bridge
          path: kava-bridge
          ref: main
      - name: install nodeJS
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 18
          cache-dependency-path: kava-bridge/contract/package.json
      - name: "install ERC20 contract deployment dependencies"
        run: "npm install"
        working-directory: kava-bridge/contract
      - name: compile default erc20 contracts
        run: make compile-contracts
        working-directory: kava-bridge
      - name: run seed scripts
        run: bash ${GITHUB_WORKSPACE}/.github/scripts/${SEED_SCRIPT_FILENAME}
        working-directory: kava-bridge/contract
        env:
          CHAIN_API_URL: ${{ inputs.chain-api-url }}
          CHAIN_ID: ${{ inputs.chain-id }}
          DEV_WALLET_MNEMONIC: ${{ secrets.DEV_WALLET_MNEMONIC }}
          SEED_SCRIPT_FILENAME: ${{ inputs.seed-script-filename }}
          ERC20_DEPLOYER_NETWORK_NAME: ${{ inputs.erc20-deployer-network-name }}
          GENESIS_VALIDATOR_ADDRESSES: ${{ inputs.genesis_validator_addresses }}

while parsing a block mapping
  in "<file>", line 36, column 9
expected <block end>, but found '<block mapping start>'
  in "<file>", line 40, column 10
Detecting smells for /Users/nam/workflows/19258ed075aa8e803221bd5865d57c00efe95f8bef222797a0eebdfff6c2ec32
We have found 6 smells
	- 2. Use commit hash instead of tags for action versions (line 32)
	- 2. Use commit hash instead of tags for action versions (line 67)
	- 2. Use commit hash instead of tags for action versions (line 42)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 29)
	- 21. Avoid workflows without comments
The following styling errors were found: 
35:10: wrong indentation: expected 10 but found 9 (indentation)
40:10: syntax error: expected <block end>, but found '<block mapping start>' (syntax)
41:13: wrong indentation: expected 11 but found 12 (indentation)
Detecting smells for /Users/nam/workflows/de5c9a99884da52406af55e0861592d998847fa6ac6228192e28727ad65ccbb7
We have found 8 smells
	- 1. Define permissions for workflows with external actions (job at line: 6)
	- 5. Avoid jobs without timeouts (line: 6)
	- 11. Use 'if' for upload-artifact action (line 49)
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 6)
	- 18. Steps should only perform a single command (line -1)
	- 19. Run tests on multiple OS's (job: build-linux)
	- 21. Avoid workflows without comments
Unable to parse yaml file: name: coverage

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

    - name: Configure
      run: cmake -Bbuild -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_STANDARD=17 -DQUILL_BUILD_TESTS=ON -DQUILL_CODE_COVERAGE=ON -DQUILL_BUILD_EXAMPLES=ON -DQUILL_VERBOSE_MAKEFILE=ON

    - name: Build
      run: cmake --build build -j4

    - name: Test
      run: |
        cd build
        ctest --build-config Debug --verbose --parallel 2

    - name: Collect code coverage
      run: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

while parsing a block mapping
  in "<file>", line 10, column 5
expected <block end>, but found '-'
  in "<file>", line 15, column 5
Detecting smells for /Users/nam/workflows/4fb87d0cd9175d0789e2b111181bbc801b94ba8da434306dfaca4af23efbd682
We have found 3 smells
	- 2. Use commit hash instead of tags for action versions (line 12)
	- 14. Avoid incorrectly formatted workflows
	- 21. Avoid workflows without comments
The following styling errors were found: 
15:5: syntax error: expected <block end>, but found '-' (syntax)
Unable to parse yaml file: # Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      - uses: r-lib/actions/check-r-package@v1

       - name: Check
        run: rcmdcheck::rcmdcheck(args = c("--ignore-vignettes"), build_args = c("--no-build-vignettes"), error_on = "error", check_dir = "check")
        shell: Rscript {0}


while parsing a block collection
  in "<file>", line 32, column 7
expected <block end>, but found '<block sequence start>'
  in "<file>", line 48, column 8
Detecting smells for /Users/nam/workflows/1ec7aff1d23e7aa9a23f61b62a46542cb22b13658bfa4d1c2b5f4488ad35c88c
We have found 6 smells
	- 2. Use commit hash instead of tags for action versions (line 41)
	- 2. Use commit hash instead of tags for action versions (line 31)
	- 2. Use commit hash instead of tags for action versions (line 45)
	- 2. Use commit hash instead of tags for action versions (line 33)
	- 2. Use commit hash instead of tags for action versions (line 35)
	- 14. Avoid incorrectly formatted workflows
The following styling errors were found: 
21:33: too many spaces after comma (commas)
23:34: too many spaces after comma (commas)
24:34: too many spaces after comma (commas)
25:34: too many spaces after comma (commas)
29:26: truthy value should be one of [false, true] (truthy)
48:8: syntax error: expected <block end>, but found '<block sequence start>' (syntax)
49:9: wrong indentation: expected 9 but found 8 (indentation)
51:1: too many blank lines (1 > 0) (empty-lines)
Detecting smells for /Users/nam/workflows/12607c88ad84fd954e303351f1c29298f9515d50a162882d807d41f663da9a8c
We have found 27 smells
	- 1. Define permissions for workflows with external actions (job at line: 32)
	- 1. Define permissions for workflows with external actions (job at line: 77)
	- 1. Define permissions for workflows with external actions (job at line: 41)
	- 1. Define permissions for workflows with external actions (job at line: 69)
	- 1. Define permissions for workflows with external actions (job at line: 27)
	- 1. Define permissions for workflows with external actions (job at line: 64)
	- 1. Define permissions for workflows with external actions (job at line: 18)
	- 1. Define permissions for workflows with external actions (job at line: 104)
	- 1. Define permissions for workflows with external actions (job at line: 82)
	- 1. Define permissions for workflows with external actions (job at line: 98)
	- 1. Define permissions for workflows with external actions (job at line: 119)
	- 1. Define permissions for workflows with external actions (job at line: 111)
	- 1. Define permissions for workflows with external actions (job at line: 46)
	- 1. Define permissions for workflows with external actions (job at line: 55)
	- 1. Define permissions for workflows with external actions (job at line: 90)
	- 1. Define permissions for workflows with external actions (job at line: 127)
	- 2. Use commit hash instead of tags for action versions (line 20)
	- 5. Avoid jobs without timeouts (line: 18)
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 18)
	- 16. Use names for run steps (lines 26:26)
	- 16. Use names for run steps (lines 21:21)
	- 16. Use names for run steps (lines 24:24)
	- 16. Use names for run steps (lines 25:25)
	- 19. Run tests on multiple OS's (job: build)
	- 21. Avoid workflows without comments
Detecting smells for /Users/nam/workflows/7c4ddce7d87b5e1418446c34d5215027f472551fab441fe6e899d5b0d01a2f8e
We have found 11 smells
	- 1. Define permissions for workflows with external actions (job at line: 13)
	- 2. Use commit hash instead of tags for action versions (line 21)
	- 2. Use commit hash instead of tags for action versions (line 41)
	- 2. Use commit hash instead of tags for action versions (line 23)
	- 5. Avoid jobs without timeouts (line: 13)
	- 7. Stop running workflows when there is a newer commit in branch
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 14)
	- 16. Use names for run steps (lines 22:22)
	- 19. Run tests on multiple OS's (job: build)
The following styling errors were found: 
22:5: wrong indentation: expected 6 but found 4 (indentation)
42:41: too few spaces before comment: expected 2 (comments)
Detecting smells for /Users/nam/workflows/63f3ca36269496083fde10f4d0b6df02ccf259bc09ef72880db915902b9bce99
We have found 9 smells
	- 1. Define permissions for workflows with external actions (job at line: 9)
	- 2. Use commit hash instead of tags for action versions (line 16)
	- 2. Use commit hash instead of tags for action versions (line 18)
	- 4. Prevent running issue/PR actions on forks (job line: 9)
	- 6. Stop running workflows when there is a newer commit in PR
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 10)
	- 21. Avoid workflows without comments
The following styling errors were found: 
23:29: truthy value should be one of [false, true] (truthy)
23:32: no new line character at the end of file (new-line-at-end-of-file)
Detecting smells for /Users/nam/workflows/e34760682c06d7f5c8f10a118d3a84f06e91c41d649f8198c969a7ad47f36255
We have found 8 smells
	- 1. Define permissions for workflows with external actions (job at line: 6)
	- 2. Use commit hash instead of tags for action versions (line 9)
	- 5. Avoid jobs without timeouts (line: 6)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 7)
	- 16. Use names for run steps (lines -1:-1)
	- 16. Use names for run steps (lines 10:10)
The following styling errors were found: 
12:44: no new line character at the end of file (new-line-at-end-of-file)
Unable to parse yaml file: name: Publish Docker Image to DockerHub after Merge

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'version.txt'
    types:
      - closed

jobs:
  release:
    name: Publish Docker Image to DockerHub
    if: ( github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true ) && github.repository == 'hpcaitech/ColossalAI'
    runs-on: [self-hosted, gpu]
    container:
      image: "hpcaitech/docker-in-docker:latest"
      options: --gpus all --rm -v /var/run/docker.sock:/var/run/docker.sock
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Docker
        id: build
        run: |
          version=$(cat version.txt)
          tag=hpcaitech/colossalai:$version
	  docker build --build-arg http_proxy=http://172.17.0.1:7890 --build-arg https_proxy=http://172.17.0.1:7890 --build-arg VERSION=v${version} -t $tag ./docker
          echo "tag=${tag}" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        id: docker-push
        run: |
          docker push ${{ steps.build.outputs.tag }}

  notify:
    name: Notify Lark via webhook
    needs: release
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8.14'

      - name: Install requests
        run: pip install requests

      - name: Notify Lark
        id: message-preparation
        run: |
          url=$SERVER_URL/$REPO/actions/runs/$RUN_ID
          if [ "$STATUS" == 'success' ]
          then
            msg="The Docker image for the latest release has been successfully built and pushed to DockerHub."
          else
            msg="Failed to build and push the Docker image for the latest release, please visit $url for details."
          fi
          echo $msg
          python .github/workflows/scripts/send_message_to_lark.py -m "$msg" -u $WEBHOOK_URL
        env:
          SERVER_URL: ${{github.server_url }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
          WEBHOOK_URL: ${{ secrets.LARK_NOTIFICATION_WEBHOOK_URL }}
          STATUS: ${{ needs.release.result }}

while scanning for the next token
found character '\t' that cannot start any token
  in "<file>", line 29, column 1
Detecting smells for /Users/nam/workflows/89575a1b9decc4f56cec8b0ec15e92e5ad159144af2614f438d2943c5442a4f2
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 50)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 45)
	- 21. Avoid workflows without comments
The following styling errors were found: 
29:1: syntax error: found character '\t' that cannot start any token (syntax)
Detecting smells for /Users/nam/workflows/236819e7e6bea4745c1ea117844a050093023cc4fe5d259a6aa75ac57f21a7e8
We have found 16 smells
	- 1. Define permissions for workflows with external actions (job at line: 18)
	- 1. Define permissions for workflows with external actions (job at line: 37)
	- 2. Use commit hash instead of tags for action versions (line 20)
	- 5. Avoid jobs without timeouts (line: 18)
	- 5. Avoid jobs without timeouts (line: 37)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 15. Use fixed version for runs-on argument (line 18)
	- 16. Use names for run steps (lines -1:22)
	- 16. Use names for run steps (lines 21:21)
	- 19. Run tests on multiple OS's (job: deno-test)
	- 21. Avoid workflows without comments
Unable to parse yaml file: name: Nightly Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and Sign

    runs-on: macos-11.0

    steps:
      - name: Checkout Hammerspoon Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout Hammerspoon Secrets
        uses: actions/checkout@v2
        with:
          repository: Hammerspoon/ci-secrets
          path: ./ci-secrets
      - name: Prepare build environment
        run: ./scripts/github-ci-pre.sh
      - name: Decrypt Secrets
        env:
          REPO_GPG_PASSPHRASE: ${{ secrets.REPO_GPG_PASSPHRASE }}
        run: ./ci-secrets/crypto.sh decrypt
      - name: Prepare keychain
        env:
          NIGHTLY_KEYCHAIN_PASSPHRASE: ${{ secrets.NIGHTLY_KEYCHAIN_PASSPHRASE }}
        run: ./scripts/github-ci-nightly-keychain.sh
      - name: Prepare secure tokens
        run: |
          /bin/cp ./ci-secrets/Cleartext/token* ../
          ls -l ..
      - name: Remove Secrets checkout
        run: /bin/rm -rf ./ci-secrets
      - name: Get version number
        id: version
        run: |
          echo ::set-output name=NIGHTLY_VERSION::$(git describe)
      - name: Workaround xcodebuild not inheriting environment
        run: touch ../is_github_actions
      - name: Build
        run: ./scripts/release.sh --nightly
      - name: Upload build log on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: nightly-build.log
          path: build/Release-build.log
      - name: Prepare artifacts
        run: mv ../archive ./
      - name: Upload artifacts: App bundle
        uses: actions/upload-artifact@v2
        with:
          name: Hammerspoon-${{ steps.version.outputs.NIGHTLY_VERSION }}.zip
          path: archive/${{ steps.version.outputs.NIGHTLY_VERSION }}/Hammerspoon-${{ steps.version.outputs.NIGHTLY_VERSION }}.zip
      - name: Upload artifacts: Debug symbols
        uses: actions/upload-artifact@v2
        with:
          name: Hammerspoon-dSYM-${{ steps.version.outputs.NIGHTLY_VERSION }}.zip
          path: archive/${{ steps.version.outputs.NIGHTLY_VERSION }}/Hammerspoon-dSYM-${{ steps.version.outputs.NIGHTLY_VERSION }}.zip
      - name: Upload artifacts: HTML docs
        uses: actions/upload-artifact@v2
        with:
          name: Hammerspoon-docs-${{ steps.version.outputs.NIGHTLY_VERSION }}.zip
          path: archive/${{ steps.version.outputs.NIGHTLY_VERSION }}/Hammerspoon-docs-${{ steps.version.outputs.NIGHTLY_VERSION }}.zip
      - name: Upload artifacts: Build log
        uses: actions/upload-artifact@v2
        with:
          name: Release-build.log
          path: archive/${{ steps.version.outputs.NIGHTLY_VERSION }}/release-build.log
      - name: IRC notification
        uses: Gottox/irc-message-action@v1.3.0
        with:
          channel: '#hammerspoon'
          nickname: 'HS_CI_Nightly'
          message: |
            New nightly build: ${{ steps.version.outputs.NIGHTLY_VERSION }}

mapping values are not allowed here
  in "<file>", line 54, column 31
Detecting smells for /Users/nam/workflows/b6a9799a6d95593a0ac9d03c59b922663723130f4cbf041fa1f3501962c2a923
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 47)
	- 2. Use commit hash instead of tags for action versions (line 74)
	- 2. Use commit hash instead of tags for action versions (line 13)
	- 14. Avoid incorrectly formatted workflows
The following styling errors were found: 
54:31: syntax error: mapping values are not allowed here (syntax)
Detecting smells for /Users/nam/workflows/47f4c5efe91d14fa3841aa36ef886f7b7b47fde8a8722f9f727569b38d78678e
We have found 24 smells
	- 2. Use commit hash instead of tags for action versions (line 167)
	- 2. Use commit hash instead of tags for action versions (line 25)
	- 2. Use commit hash instead of tags for action versions (line 50)
	- 2. Use commit hash instead of tags for action versions (line 124)
	- 2. Use commit hash instead of tags for action versions (line 121)
	- 2. Use commit hash instead of tags for action versions (line 23)
	- 4. Prevent running issue/PR actions on forks line 109:110
	- 5. Avoid jobs without timeouts (line: -1)
	- 5. Avoid jobs without timeouts (line: 47)
	- 5. Avoid jobs without timeouts (line: 21)
	- 5. Avoid jobs without timeouts (line: 112)
	- 5. Avoid jobs without timeouts (line: 69)
	- 6. Stop running workflows when there is a newer commit in PR
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 21)
	- 16. Use names for run steps (lines -1:122)
	- 16. Use names for run steps (lines -1:24)
	- 16. Use names for run steps (lines 24:24)
	- 16. Use names for run steps (lines -1:126)
	- 16. Use names for run steps (lines 168:168)
	- 18. Steps should only perform a single command (line -1)
	- 19. Run tests on multiple OS's (job: Build)
	- 19. Run tests on multiple OS's (job: IntegrationTest)
The following styling errors were found: 
3:1: comment not indented like content (comments-indentation)
11:1: comment not indented like content (comments-indentation)
106:12: too few spaces before comment: expected 2 (comments)
114:22: too few spaces before comment: expected 2 (comments)
Detecting smells for /Users/nam/workflows/642cea6b79f659fe3a6b5f5119c7df54cb6934c291a304126b908284b7533b81
We have found 13 smells
	- 1. Define permissions for workflows with external actions (job at line: 8)
	- 2. Use commit hash instead of tags for action versions (line 16)
	- 2. Use commit hash instead of tags for action versions (line 18)
	- 4. Prevent running issue/PR actions on forks line -1:29
	- 5. Avoid jobs without timeouts (line: 8)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 8)
	- 18. Steps should only perform a single command (line -1)
	- 20. Avoid installing packages without version (line -1)
	- 21. Avoid workflows without comments
Detecting smells for /Users/nam/workflows/ba50c1d0a95ec0c72e678017df617c361ab2388e64b5016721f6fdd6435391dd
We have found 6 smells
	- 1. Define permissions for workflows with external actions (job at line: 7)
	- 5. Avoid jobs without timeouts (line: 7)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 7)
	- 16. Use names for run steps (lines -1:10)
The following styling errors were found: 
8:29: too few spaces before comment: expected 2 (comments)
Detecting smells for /Users/nam/workflows/7523894109a5fbe39786bb136b11a41434a692595e124c1db0cb23b5a99342ab
We have found 10 smells
	- 1. Define permissions for workflows with external actions (job at line: 7)
	- 2. Use commit hash instead of tags for action versions (line 18)
	- 2. Use commit hash instead of tags for action versions (line 12)
	- 5. Avoid jobs without timeouts (line: 7)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 8)
	- 19. Run tests on multiple OS's (job: build)
	- 21. Avoid workflows without comments
Unable to parse yaml file: name: Python tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: "3.6"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run unit tests
      run: |
        coverage run tests.py
    - name: Test sample DMARC reports
      run: |
        python setup.py install
        parsedmarc --debug -c ci.ini samples/aggregate/*
        parsedmarc --debug -c ci.ini samples/forensic/*"
    - name: Check code style
      run: |
        flake8 *.py parsedmarc/*.py
    - name: Check README.rst syntax
      run: |
      rstcheck --report warning README.rst
    - name: Test building documentation
      run: |
        cd docs
        make html
    - name: Test building packages
      run: |
        python3 setup.py sdist
        python3 setup.py bdist_wheel
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2

while scanning a simple key
  in "<file>", line 37, column 7
could not find expected ':'
  in "<file>", line 38, column 5
Detecting smells for /Users/nam/workflows/432a0c8b4fdeece1d97468bcb69603dcb88233a6e1535bb01d18001709f39ba2
We have found 6 smells
	- 2. Use commit hash instead of tags for action versions (line 16)
	- 2. Use commit hash instead of tags for action versions (line 46)
	- 2. Use commit hash instead of tags for action versions (line 14)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 11)
	- 21. Avoid workflows without comments
The following styling errors were found: 
5:16: too many spaces inside brackets (brackets)
5:23: too many spaces inside brackets (brackets)
7:16: too many spaces inside brackets (brackets)
7:23: too many spaces inside brackets (brackets)
15:5: wrong indentation: expected 6 but found 4 (indentation)
38:5: syntax error: could not find expected ':' (syntax)
Unable to parse yaml file: name: Mark stale pull requests

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch

permissions:
  pull-requests: write

jobs:
  stale:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/stale@v4
      with:
        stale-pr-message: 'This PR is stale because it has been open for 30 days with no activity.'
        close-pr-message: 'Thanks for the pull reuqest, but since it was stale for more than a month we are closing it. If you want to work back on it, feel free to open it back or create a new one.'
        stale-pr-label: 'stale'

        days-before-stale: -1
        days-before-issue-stale: -1
        days-before-pr-stale: 30

        days-before-close: -1
        days-before-issue-close: -1
        days-before-pr-close: 7
        debug-only: true

while scanning a simple key
  in "<file>", line 6, column 3
could not find expected ':'
  in "<file>", line 8, column 1
Detecting smells for /Users/nam/workflows/02f30dab4b47b207a5a33e3e72ea4a1d5b79b1e9f2e57205ac113046e131a7fd
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 15)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 12)
	- 21. Avoid workflows without comments
The following styling errors were found: 
8:1: syntax error: could not find expected ':' (syntax)
Unable to parse yaml file: name: release-please
on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        with:
          release-type: node
          package-name: hexo-theme-volantis
  npm-publish:
    if: ${{ contains(github.event.head_commit.message, 'chore(dev)') && contains(github.event.head_commit.message, 'release') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org
      - name: Publish
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
  merge:
    if: ${{ contains(github.event.head_commit.message, 'chore(dev)') && contains(github.event.head_commit.message, 'release') }}
    runs-on: ubuntu-latest
    steps:
    steps:
      - name: merge-to-main
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git clone https://github.com/volantis-x/hexo-theme-volantis.git hexo-theme-volantis
          cd hexo-theme-volantis
          git fetch origin
          git checkout main
          git reset --hard dc9134662502ed2aa8d39dfa09ffe81650a2b024
          git merge dev
          git push --force "https://github-actions[bot]:${{ secrets.GITHUB_TOKEN }}@github.com/volantis-x/hexo-theme-volantis.git" main:main
      - name: sync-coding
        run: |
          curl -u ${{ secrets.CODING_TOKEN_API }} \
             -v -X POST  'https://volantis-x.coding.net/api/cci/job/387490/trigger' \
             -H 'Content-Type: application/json' \
             -d '
              {
                "envs": [
                  {
                    "name": "BRANCH",
                    "value": "main",
                    "sensitive": 0
                  }
                ]
              }'
while constructing a mapping
  in "<file>", line 30, column 5
found duplicate key "steps" with value "[{'name': 'merge-to-main', 'run': 'git config --global user.email "github-actions[bot]@users.noreply.github.com"\ngit config --global user.name "github-actions[bot]"\ngit clone https://github.com/volantis-x/hexo-theme-volantis.git hexo-theme-volantis\ncd hexo-theme-volantis\ngit fetch origin\ngit checkout main\ngit reset --hard dc9134662502ed2aa8d39dfa09ffe81650a2b024\ngit merge dev\ngit push --force "https://github-actions[bot]:${{ secrets.GITHUB_TOKEN }}@github.com/volantis-x/hexo-theme-volantis.git" main:main\n'}, {'name': 'sync-coding', 'run': 'curl -u ${{ secrets.CODING_TOKEN_API }} \\\n   -v -X POST  \'https://volantis-x.coding.net/api/cci/job/387490/trigger\' \\\n   -H \'Content-Type: application/json\' \\\n   -d \'\n    {\n      "envs": [\n        {\n          "name": "BRANCH",\n          "value": "main",\n          "sensitive": 0\n        }\n      ]\n    }\''}]" (original value: "None")
  in "<file>", line 33, column 5

To suppress this check see:
    https://yaml.dev/doc/ruamel.yaml/api/#Duplicate_keys

Detecting smells for /Users/nam/workflows/5f208d2ed2a03e89b19fc427282bab5143ca6a099ea362e174d3a35d61d428ae
We have found 6 smells
	- 2. Use commit hash instead of tags for action versions (line 10)
	- 2. Use commit hash instead of tags for action versions (line 18)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 8)
	- 21. Avoid workflows without comments
The following styling errors were found: 
4:16: too many spaces inside brackets (brackets)
4:20: too many spaces inside brackets (brackets)
33:5: duplication of key "steps" in mapping (key-duplicates)
59:17: no new line character at the end of file (new-line-at-end-of-file)
Detecting smells for /Users/nam/workflows/15ac338077ceed87a511ccfffffe535592fa4e002c71009611632f5443005ff5
We have found 12 smells
	- 1. Define permissions for workflows with external actions (job at line: 14)
	- 2. Use commit hash instead of tags for action versions (line 21)
	- 2. Use commit hash instead of tags for action versions (line 31)
	- 5. Avoid jobs without timeouts (line: 14)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 9. Avoid executing scheduled workflows on forks
	- 11. Use 'if' for upload-artifact action (line 32)
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 18. Steps should only perform a single command (line -1)
Detecting smells for /Users/nam/workflows/ba52eb866fd04ac8f809fcf0e797c57792ca4ddae6ae3bb7a207502ae2250e6c
We have found 8 smells
	- 1. Define permissions for workflows with external actions (job at line: 8)
	- 5. Avoid jobs without timeouts (line: 17)
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 19)
	- 18. Steps should only perform a single command (line -1)
The following styling errors were found: 
5:13: too many spaces after colon (colons)
12:9: wrong indentation: expected 6 but found 8 (indentation)
16:34: trailing spaces (trailing-spaces)
20:27: trailing spaces (trailing-spaces)
22:9: wrong indentation: expected 6 but found 8 (indentation)
31:99: trailing spaces (trailing-spaces)
32:99: trailing spaces (trailing-spaces)
Unable to parse yaml file: name: Clippy check

on: [push, pull_request]
  paths:
    - '.github/workflows/clippy.yml'
    - 'userspace/ksud/**'

env:
  RUSTFLAGS: '-Dwarnings'

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: userspace/ksud

      - name: Install cross
        run: cargo install cross

      - name: Run clippy
        run: |
          cross clippy --manifest-path userspace/ksud/Cargo.toml --target aarch64-linux-android
          cross clippy --manifest-path userspace/ksud/Cargo.toml --target x86_64-linux-android

while parsing a block mapping
  in "<file>", line 1, column 1
expected <block end>, but found '<block mapping start>'
  in "<file>", line 4, column 3
Detecting smells for /Users/nam/workflows/f5a7a75f4de6149e724717686683417413d4f2dddd2c53e382a9832ef89bccf1
We have found 5 smells
	- 2. Use commit hash instead of tags for action versions (line 16)
	- 2. Use commit hash instead of tags for action versions (line 14)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 12)
	- 21. Avoid workflows without comments
The following styling errors were found: 
4:3: syntax error: expected <block end>, but found '<block mapping start>' (syntax)
Unable to parse yaml file: jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
    - name: Install vinca
      run: |
        pip install git+https://github.com/RoboStack/vinca.git@master

    # - name: Generate recipes
    #   run: |
    #     cp vinca_linux_64.yaml vinca.yaml
    #     vinca --multiple --platform linux-64
    # - name: Generate azure pipelines
    #   run: |
    #     vinca-azure --platform linux-64 --trigger-branch buildbranch_linux -d ./recipes --additional-recipes
    # - name: Commit files
    #   run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "GitHub Action"
    #     git add .
    #     git commit -m "Add build files `date '+%Y-%m-%d-%H%M'`" -a
    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: buildbranch_linux
    #     force: true

    Generate recipes for OS X
    - name: Reset repo
      run: |
        git reset --hard origin/master
    - name: Generate recipes
      run: |
        git clean -fdx
        cp vinca_osx.yaml vinca.yaml
        vinca --multiple --platform osx-64
    - name: Generate azure pipelines
      run: |
        vinca-azure --platform osx-64 --trigger-branch buildbranch_osx -d ./recipes --additional-recipes
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Add build files `date '+%Y-%m-%d-%H%M'`" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: buildbranch_osx
        force: true

    # # Generate recipes for Windows
    # - name: Reset repo
    #   run: |
    #     git reset --hard origin/master
    # - name: Generate recipes
    #   run: |
    #     git clean -fdx
    #     cp vinca_win.yaml vinca.yaml
    #     vinca --multiple --platform win-64
    # - name: Generate azure pipelines
    #   run: |
    #     vinca-azure --platform win-64 --trigger-branch buildbranch_win -d ./recipes --additional-recipes
    # - name: Commit files
    #   run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "GitHub Action"
    #     git add .
    #     git commit -m "Add build files `date '+%Y-%m-%d-%H%M'`" -a
    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: buildbranch_win
    #     force: true

    # Generate recipes for ARM64
    - name: Reset repo
      run: |
        git reset --hard origin/master
    - name: Generate recipes
      run: |
        git clean -fdx
        cp vinca_linux_aarch64.yaml vinca.yaml
        vinca --multiple --platform linux-aarch64
    - name: Generate azure pipelines
      run: |
        vinca-azure --platform linux-aarch64 --trigger-branch buildbranch_linux_aarch64 -d ./recipes --additional-recipes
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Add build files `date '+%Y-%m-%d-%H%M'`" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: buildbranch_linux_aarch64
        force: true

on:
  push:
    branches:
      - master
while scanning a simple key
  in "<file>", line 36, column 5
could not find expected ':'
  in "<file>", line 37, column 5
Detecting smells for /Users/nam/workflows/e62afae1faf1c366fbb148068244c71d5ab66e06d8da34500c95c197852f3919
We have found 3 smells
	- 2. Use commit hash instead of tags for action versions (line 8)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 2)
The following styling errors were found: 
5:5: wrong indentation: expected 6 but found 4 (indentation)
7:36: too few spaces before comment: expected 2 (comments)
8:24: too few spaces before comment: expected 2 (comments)
11:31: too few spaces before comment: expected 2 (comments)
37:5: syntax error: could not find expected ':' (syntax)
Detecting smells for /Users/nam/workflows/2a0890d4fa4ae492426c16b47c7ada5cf952217e6bfad0bdab54675f31a32a6d
We have found 7 smells
	- 1. Define permissions for workflows with external actions (job at line: 44)
	- 1. Define permissions for workflows with external actions (job at line: 22)
	- 2. Use commit hash instead of tags for action versions (line 45)
	- 2. Use commit hash instead of tags for action versions (line 22)
	- 8. Avoid running CI related actions when no source code has changed
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
Unable to parse yaml file: # This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Tests

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set Environment Variables
      run: |
        echo "${HOME}/.gem/ruby/2.7.0/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        gem install --user-install hiera-eyaml -v 2.1.0
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install --upgrade wheel
        python -m pip install --upgrade mypy pytest pytest-cov pytest-console-scripts pylint coveralls pep257
        python -m pip install --editable .
    - name: Validate Compliance with PEP257
      run: |
        pep257 yamlpath
    - name: Validate Compliance with MyPY
      run: |
        mypy yamlpath
    - name: Lint with pylint
      run: |
        pylint yamlpath
    - name: Unit Test with pytest
      run: |
        pytest --verbose --cov=yamlpath --cov-report=term-missing --cov-fail-under=100 --script-launch-mode=subprocess tests
    - name: Publish coveralls Report
      env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls

mapping values are not allowed here
  in "<file>", line 50, column 24
Detecting smells for /Users/nam/workflows/16d51e3faadfb28b3dc6ae7ca6db87626d5bedceabfb0177b85299987ef2595f
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 20)
	- 2. Use commit hash instead of tags for action versions (line 22)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 14)
The following styling errors were found: 
8:16: too many spaces inside brackets (brackets)
8:36: too many spaces inside brackets (brackets)
10:16: too many spaces inside brackets (brackets)
10:36: too many spaces inside brackets (brackets)
21:5: wrong indentation: expected 6 but found 4 (indentation)
50:24: syntax error: mapping values are not allowed here (syntax)
Detecting smells for /Users/nam/workflows/e3504757884cc80309e38c0f5ca4dd5fca121ed60751a021251fcef871acbe93
We have found 14 smells
	- 1. Define permissions for workflows with external actions (job at line: 6)
	- 2. Use commit hash instead of tags for action versions (line 10)
	- 2. Use commit hash instead of tags for action versions (line 34)
	- 2. Use commit hash instead of tags for action versions (line 8)
	- 5. Avoid jobs without timeouts (line: 6)
	- 11. Use 'if' for upload-artifact action (line 35)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 6)
	- 16. Use names for run steps (lines 9:9)
	- 18. Steps should only perform a single command (line -1)
	- 19. Run tests on multiple OS's (job: build)
	- 20. Avoid installing packages without version (line -1)
	- 21. Avoid workflows without comments
The following styling errors were found: 
3:6: too many spaces inside brackets (brackets)
3:11: too many spaces inside brackets (brackets)
Unable to parse yaml file: #=================================================
# Description: Build OpenWrt using GitHub Actions
# Github: https://github.com/Hyy2001X/AutoBuild-Actions
# Lisence: MIT
# Author: P3TERX
# Modify: Hyy2001
#=================================================

name: AutoBuild OpenWrt

on: 
#  release:
#    types: [published]

#  push:
#    branches: 
#      - main

#  schedule:
#    - cron: 0 8 * * 5
  
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: main
  CONFIG_FILE: .config
  FEEDS_CONF_DEFAULT: ./Customize/feeds.conf.default
  MAC80211: ./Customize/mac80211.sh
  MWAN3: ./Customize/mwan3
  CUSTOM_SCRIPT_1: ./Scripts/diy-part1.sh
  CUSTOM_SCRIPT_2: ./Scripts/diy-part2.sh
  CUSTOM_SCRIPT_3: ./Scripts/diy-part3.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync

    - name: Clone OpenWRT source code
      run: |
        git clone -b $REPO_BRANCH $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Run Before-Update-Feeds Script
      run: |
        [ -e $FEEDS_CONF_DEFAULT ] && mv $FEEDS_CONF_DEFAULT openwrt/feeds.conf.default
        chmod +x $CUSTOM_SCRIPT_1
        cd openwrt
        $GITHUB_WORKSPACE/$CUSTOM_SCRIPT_1

    - name: Update & Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Run After-Update-Feeds Script
      run: |
        [ -e $MAC80211 ] && mv $MAC80211 openwrt/package/kernel/mac80211/files/lib/wifi/mac80211.sh
        [ -e $MWAN3 ] && mv $MWAN3 openwrt/package/feeds/packages/mwan3/files/etc/config/mwan3
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $CUSTOM_SCRIPT_2
        cd openwrt
        $GITHUB_WORKSPACE/$CUSTOM_SCRIPT_2

    - name: Download package
      run: |
      	cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
      	cd openwrt
        make -j$(nproc) V=s

    - name: Run After-Compile-OpenWRT Script
      run: |
        chmod +x $CUSTOM_SCRIPT_3
        cd openwrt
        $GITHUB_WORKSPACE/$CUSTOM_SCRIPT_3

    - name : Upload Firmware to Artifact
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt
        path: openwrt/bin/Firmware

while scanning for the next token
found character '\t' that cannot start any token
  in "<file>", line 81, column 7
Detecting smells for /Users/nam/workflows/4286c22d6c0e6037fb216413dd768ce624ed9c150f71600341e6e9fe242d0df2
We have found 1 smells
	- 14. Avoid incorrectly formatted workflows
The following styling errors were found: 
1:2: missing starting space in comment (comments)
7:2: missing starting space in comment (comments)
11:4: trailing spaces (trailing-spaces)
12:1: comment not indented like content (comments-indentation)
16:15: trailing spaces (trailing-spaces)
21:1: trailing spaces (trailing-spaces)
42:5: wrong indentation: expected 6 but found 4 (indentation)
50:401: line too long (414 > 400 characters) (line-length)
81:7: syntax error: found character '\t' that cannot start any token (syntax)
Detecting smells for /Users/nam/workflows/fcc3cada3a3b17f5a6f045a896ea0c88c8a1d95f9655bb5eb749c6ccc0152c59
We have found 11 smells
	- 1. Define permissions for workflows with external actions (job at line: 6)
	- 2. Use commit hash instead of tags for action versions (line 13)
	- 2. Use commit hash instead of tags for action versions (line 9)
	- 3. Use permissions whenever using Github Token (job at line 6)
	- 5. Avoid jobs without timeouts (line: 6)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 6)
	- 16. Use names for run steps (lines -1:10)
	- 20. Avoid installing packages without version (line -1)
	- 21. Avoid workflows without comments
The following styling errors were found: 
10:5: wrong indentation: expected 6 but found 4 (indentation)
Unable to parse yaml file: name: pull-request-lint
on:
  pull_request_target:
    types:
      - labeled
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - edited
jobs:
  validate:
    name: Validate PR title
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        id: lint_pr_title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |-
            feat
            fix
            chore
            doc
            test
            security
            remove
            deprecate
            refactor
            perf
            ci
            revert
            style
          requireScope: false
      - uses: marocchino/sticky-pull-request-comment@v2
        # When the previous steps fails, the workflow would stop. By adding this
        # condition you can continue the execution with the populated error message.
        if: always() && (steps.lint_pr_title.outputs.error_message != null)
        with:
          header: pr-title-lint-error
          message: |
            Hey there and thank you for opening this pull request! 👋🏼
            
            We require pull request titles to follow the [Conventional Commits specification](https://www.conventionalcommits.org/en/v1.0.0/) and it looks like your proposed title needs to be adjusted.

            Details: [CONTRIBUTING.md](https://github.com/mongodb/awscdk-resources-mongodbatlas/blob/INTMDB-934/CONTRIBUTING.md#pr-title-format)
            
            ```
            ${{ steps.lint_pr_title.outputs.error_message }}
            ```
      # Delete a previous comment when the issue has been resolved
      - if: ${{ steps.lint_pr_title.outputs.error_message == null }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:   
          header: pr-title-lint-error
          delete: true
  pr-labeler:
    name: Add Label
    needs: [ validate ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
     steps:
       - uses: TimonVS/pr-labeler-action@v4
         with:
           repo-token: ${{ secrets.GITHUB_TOKEN }}
           configuration-path: .github/pr-labeler.yml

while parsing a block mapping
  in "<file>", line 61, column 5
expected <block end>, but found '<block mapping start>'
  in "<file>", line 67, column 6
Detecting smells for /Users/nam/workflows/adf7786607f77482c4c3bb4ec43b65881ade2f1c84ace76014bbdac817989e3f
We have found 6 smells
	- 2. Use commit hash instead of tags for action versions (line 17)
	- 2. Use commit hash instead of tags for action versions (line 55)
	- 2. Use commit hash instead of tags for action versions (line 67)
	- 2. Use commit hash instead of tags for action versions (line 37)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 13)
The following styling errors were found: 
46:1: trailing spaces (trailing-spaces)
50:1: trailing spaces (trailing-spaces)
57:14: trailing spaces (trailing-spaces)
62:13: too many spaces inside brackets (brackets)
62:22: too many spaces inside brackets (brackets)
67:6: syntax error: expected <block end>, but found '<block mapping start>' (syntax)
Unable to parse yaml file: name: storage-builder
on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:

jobs:
  build:
    name: build the binary
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: uraimo/run-on-arch-action@v2.0.5
      name: Build artifact
      id: build
      with:
        arch: aarch64
        distro: ubuntu18.04
        setup: |
            mkdir -p "${PWD}/artifacts"
        dockerRunArgs: |
          --volume "${PWD}/artifacts:/artifacts"
        run: |
          apt update
          apt -y install --no-install-recommends curl wget ca-certificates
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
          . ~/.nvm/nvm.sh
          nvm install 12.18.1
          npm ci
          mkdir -p ~/.pkg-cache/v2.6
          wget https://github.com/robertsLando/pkg-binaries/releases/download/v1.0.0/fetched-v12.18.1-linux-arm64 -O fetched-v12.18.1-linux-arm64
          mv fetched-v12.18.1-linux-arm64 ~/.pkg-cache/v2.6
          npm run build
          npm run pkg -- --targets node12-linux-arm64 --output storage-api-arm64
          cp storage-api-arm64 /artifacts/storage-api-arm64
    - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: /artifacts/storage-api-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
mapping values are not allowed here
  in "<file>", line 38, column 13
Detecting smells for /Users/nam/workflows/4a84da6ad55e8dc2742f57541a438cb0e427266e3b4ab01feb7b97841c802c80
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 12)
	- 2. Use commit hash instead of tags for action versions (line 37)
	- 2. Use commit hash instead of tags for action versions (line 13)
	- 14. Avoid incorrectly formatted workflows
The following styling errors were found: 
13:5: wrong indentation: expected 6 but found 4 (indentation)
43:7: no new line character at the end of file (new-line-at-end-of-file)
43:1: trailing spaces (trailing-spaces)
38:13: syntax error: mapping values are not allowed here (syntax)
Detecting smells for /Users/nam/workflows/e18db8d44e7f1b87b690c9b2fff6152816b9bed385057960d86364e453accb0f
We have found 12 smells
	- 1. Define permissions for workflows with external actions (job at line: 11)
	- 2. Use commit hash instead of tags for action versions (line 16)
	- 5. Avoid jobs without timeouts (line: 11)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 12)
	- 19. Run tests on multiple OS's (job: build)
	- 21. Avoid workflows without comments
The following styling errors were found: 
8:13: too many spaces after colon (colons)
16:5: wrong indentation: expected 6 but found 4 (indentation)
21:52: no new line character at the end of file (new-line-at-end-of-file)
Detecting smells for /Users/nam/workflows/19adf5faa7348751fbd2cbc3840a6f95108578688542b81188bce4c01f1a6a17
We have found 19 smells
	- 1. Define permissions for workflows with external actions (job at line: 11)
	- 1. Define permissions for workflows with external actions (job at line: 88)
	- 2. Use commit hash instead of tags for action versions (line 103)
	- 2. Use commit hash instead of tags for action versions (line 29)
	- 2. Use commit hash instead of tags for action versions (line 106)
	- 2. Use commit hash instead of tags for action versions (line 39)
	- 2. Use commit hash instead of tags for action versions (line 44)
	- 2. Use commit hash instead of tags for action versions (line 33)
	- 2. Use commit hash instead of tags for action versions (line 94)
	- 3. Use permissions whenever using Github Token (job at line 88)
	- 5. Avoid jobs without timeouts (line: 11)
	- 5. Avoid jobs without timeouts (line: 88)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 11. Use 'if' for upload-artifact action (line 45)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 90)
	- 16. Use names for run steps (lines -1:30)
The following styling errors were found: 
5:14: too few spaces before comment: expected 2 (comments)
27:38: too few spaces before comment: expected 2 (comments)
50:1: comment not indented like content (comments-indentation)
97:53: too few spaces before comment: expected 2 (comments)
111:70: too few spaces before comment: expected 2 (comments)
Detecting smells for /Users/nam/workflows/0371f2663802e765f83baca39c3847bffce59c2d76c22d4f1c031e8d3bd5339f
We have found 8 smells
	- 1. Define permissions for workflows with external actions (job at line: 8)
	- 5. Avoid jobs without timeouts (line: 8)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 8)
	- 16. Use names for run steps (lines -1:11)
The following styling errors were found: 
5:5: wrong indentation: expected 6 but found 4 (indentation)
11:5: wrong indentation: expected 6 but found 4 (indentation)
Detecting smells for /Users/nam/workflows/eee72092636417242d2efad987244b5e5618bca6d14968b0ba6418ff196098f4
We have found 10 smells
	- 1. Define permissions for workflows with external actions (job at line: 22)
	- 2. Use commit hash instead of tags for action versions (line 27)
	- 2. Use commit hash instead of tags for action versions (line 25)
	- 2. Use commit hash instead of tags for action versions (line 29)
	- 5. Avoid jobs without timeouts (line: 22)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 22)
	- 19. Run tests on multiple OS's (job: build-and-push)
	- 21. Avoid workflows without comments
The following styling errors were found: 
25:5: wrong indentation: expected 6 but found 4 (indentation)
Detecting smells for /Users/nam/workflows/d8f55e5a940725e6adf39ab659102c72f75556b1607ac4535a92973910bef02e
We have found 0 smells
Unable to parse yaml file: name: Create Release Draft

on:
  push:
    tags:
      - '*'

jobs:
  build_and_draft:
    name: Build and Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Ref
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Environment
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Create Build Artifact
        run: 7z a -r TarkovTracker-${{ github.ref }}.zip ./dist/*

      - name: Build Changelog
          id: github_release
          uses: mikepenz/release-changelog-builder-action@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Draft Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{steps.github_release.outputs.changelog}}
          files: TarkovTracker-${{ github.ref }}.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
mapping values are not allowed here
  in "<file>", line 28, column 13
Detecting smells for /Users/nam/workflows/a4bcb10ef217a69e0a9af5e3ec838cdcc90de4fc9264e55e560d131654499a5f
We have found 6 smells
	- 2. Use commit hash instead of tags for action versions (line 28)
	- 2. Use commit hash instead of tags for action versions (line 13)
	- 2. Use commit hash instead of tags for action versions (line 33)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 10)
	- 21. Avoid workflows without comments
The following styling errors were found: 
28:13: syntax error: mapping values are not allowed here (syntax)
Unable to parse yaml file: name: Release

# TODO: run this only for the oracle/opengrok repository
on:
  push:
    tags:
      - [1-9]+.[0-9]+.[0-9]+

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master branch
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Install pre-requisites
      run: ./dev/before_install
    - name: Before build actions
      run: ./dev/before
    - name: Build
      run: ./mvnw -DskipTests=true -Dmaven.javadoc.skip=false -B -V package
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload release tarball
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./distribution/target/opengrok-${{ github.ref }}.tar.gz
        asset_name: opengrok-${{ github.ref }}.tar.gz
        asset_content_type: application/octet-stream

while parsing a block collection
  in "<file>", line 7, column 7
expected <block end>, but found '<scalar>'
  in "<file>", line 7, column 14
Detecting smells for /Users/nam/workflows/a12db4af6c634f4dd559c5d5a277e93068243c499b3eda3055e90d6ef4a4a503
We have found 7 smells
	- 2. Use commit hash instead of tags for action versions (line 15)
	- 2. Use commit hash instead of tags for action versions (line 13)
	- 2. Use commit hash instead of tags for action versions (line 32)
	- 2. Use commit hash instead of tags for action versions (line 42)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 10)
The following styling errors were found: 
13:5: wrong indentation: expected 6 but found 4 (indentation)
7:14: syntax error: expected <block end>, but found '<scalar>' (syntax)
Detecting smells for /Users/nam/workflows/40b2756938b8fb14779ce1da3f2d1fa2d6c450a1822410bdae129fc679d537f4
We have found 30 smells
	- 1. Define permissions for workflows with external actions (job at line: 38)
	- 1. Define permissions for workflows with external actions (job at line: 82)
	- 1. Define permissions for workflows with external actions (job at line: 10)
	- 2. Use commit hash instead of tags for action versions (line 43)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 2. Use commit hash instead of tags for action versions (line 13)
	- 2. Use commit hash instead of tags for action versions (line 27)
	- 2. Use commit hash instead of tags for action versions (line 55)
	- 2. Use commit hash instead of tags for action versions (line 33)
	- 3. Use permissions whenever using Github Token (job at line 82)
	- 5. Avoid jobs without timeouts (line: 38)
	- 5. Avoid jobs without timeouts (line: 82)
	- 5. Avoid jobs without timeouts (line: 10)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 11. Use 'if' for upload-artifact action (line 34)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 10)
	- 16. Use names for run steps (lines -1:-1)
	- 16. Use names for run steps (lines 30:31)
	- 16. Use names for run steps (lines 28:28)
	- 16. Use names for run steps (lines -1:20)
	- 16. Use names for run steps (lines -1:44)
	- 16. Use names for run steps (lines 57:66)
	- 16. Use names for run steps (lines 14:14)
	- 16. Use names for run steps (lines 29:30)
	- 17. Use cache parameter instead of cache option
	- 19. Run tests on multiple OS's (job: build_app)
	- 22. Run CI on multiple language versions (job: build_app)
The following styling errors were found: 
21:24: too few spaces before comment: expected 2 (comments)
Detecting smells for /Users/nam/workflows/3018e452634b949a4a7e349ffbe67aac4156a153c6982307dfed643b1d896280
We have found 7 smells
	- 1. Define permissions for workflows with external actions (job at line: 9)
	- 2. Use commit hash instead of tags for action versions (line 33)
	- 3. Use permissions whenever using Github Token (job at line 9)
	- 5. Avoid jobs without timeouts (line: 9)
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 9)
	- 21. Avoid workflows without comments
Detecting smells for /Users/nam/workflows/cf76e65c9f66e5d4a0df66a8edef7cf9a46720dde2c80c6c1d664b8b9aa753b1
We have found 12 smells
	- 1. Define permissions for workflows with external actions (job at line: 93)
	- 1. Define permissions for workflows with external actions (job at line: 24)
	- 1. Define permissions for workflows with external actions (job at line: 12)
	- 2. Use commit hash instead of tags for action versions (line 74)
	- 2. Use commit hash instead of tags for action versions (line 39)
	- 2. Use commit hash instead of tags for action versions (line 19)
	- 9. Avoid executing scheduled workflows on forks
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 14)
	- 18. Steps should only perform a single command (line -1)
The following styling errors were found: 
2:2: missing starting space in comment (comments)
27:14: too many spaces inside empty brackets (brackets)
57:19: trailing spaces (trailing-spaces)
96:14: too many spaces inside empty brackets (brackets)
126:19: trailing spaces (trailing-spaces)
Detecting smells for /Users/nam/workflows/467f6a71f3cec7bf252512f48016cdf2952ea261d67776e107aaea043757c7e6
We have found 15 smells
	- 1. Define permissions for workflows with external actions (job at line: 9)
	- 2. Use commit hash instead of tags for action versions (line 15)
	- 2. Use commit hash instead of tags for action versions (line 12)
	- 2. Use commit hash instead of tags for action versions (line 11)
	- 5. Avoid jobs without timeouts (line: 9)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 16. Use names for run steps (lines -1:-1)
	- 16. Use names for run steps (lines -1:13)
	- 16. Use names for run steps (lines -1:16)
	- 16. Use names for run steps (lines 12:12)
	- 18. Steps should only perform a single command (line -1)
	- 21. Avoid workflows without comments
The following styling errors were found: 
12:5: wrong indentation: expected 6 but found 4 (indentation)
Unable to parse yaml file: name: ci

# Trigger the workflow on push or pull request
on:
  # workflow_dispatch:
  pull_request:
    # branches: [master]
    types: [synchronize, opened, reopened]
  push:
    # branches: [main]
    paths:
      - '.github/workflows/ci.yml'
      - '*.cabal'
      - 'cabal.project'
      - 'src/**'
      - 'test/**'
      - 'cbits/**'
  schedule:
    # additionally run once per week (At 00:00 on Sunday) to maintain cache
    - cron: '0 0 * * 0'

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.arch }} ghc-${{ matrix.ghc }} ${{ matrix.mode }}
    runs-on: [ ${{ matrix.os }}, ${{ matrix.arch }} ]
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
          - 'macOS-latest'
          - 'windows-latest'
        arch:
          - "x64"
          - "ARM64"
        ghc:
          - 'latest'
          - '9.4'
          - '9.2'
          - '9.0'
          - '8.10'
        mode:
          - 'debug'
          - 'release'
        exclude:
          - os: 'windows-latest'
            mode: 'debug'
          - os: 'windows-latest'
            arch: "ARM64"
          - os: 'ubuntu-latest'
            arch: "ARM64"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: actions/cache
          path: .github/actions/cache-always
          ref: v3

      # Tweak `action.yml` of `actions/cache@v3` to remove the `post-if`
      # condition, making it default to `post-if: always ()`.
      - name: Set up actions/cache-always@v3
        run: |
          sed -i -e '/ post-if: /d' .github/actions/cache-always/action.yml

      - name: Set up Haskell
        uses: haskell/actions/setup@v2
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: latest

      - name: Set up environment
        run: |
          if [ ${{ matrix.mode }} == 'release' ]; then
            echo CABAL_FLAGS=--enable-tests --test-show-details=direct --flags=nofib >> $GITHUB_ENV
          else
            if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
              sudo apt-get -y install pkg-config libcapstone-dev libfreetype-dev libglfw3-dev libgtk-3-dev libtbb-dev
            elif [ ${{ matrix.os }} == 'macOS-latest' ]; then
              brew install pkg-config capstone freetype glfw
            fi
            echo CABAL_FLAGS=--enable-tests --test-show-details=direct --flags=nofib --flags=debug --ghc-options=\"-optc=-DTRACY_TIMER_FALLBACK\" --ghc-options=\"-optcxx=-DTRACY_TIMER_FALLBACK\" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Configure
        run: cabal configure $CABAL_FLAGS
        shell: bash

      - name: Freeze
        run: cabal freeze

      - name: actions/cache-always@v3
        uses: ./.github/actions/cache-always
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.ghc }}-${{ matrix.mode }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.ghc }}-${{ matrix.mode }}-${{ hashFiles('cabal.project.freeze') }}
            ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.ghc }}-${{ matrix.mode }}-

      - name: Build dependencies
        run: cabal build --only-dependencies

      - name: Build
        run: cabal build

      - name: Haddock
        run: cabal haddock
        if: matrix.mode == 'release'

      - name: Test doctest
        run: cabal test doctest
        if: matrix.os == 'ubuntu-latest' && matrix.mode == 'release'

      - name: Test nofib
        run: cabal test nofib-interpreter
        if: matrix.os != 'windows-latest'

# vi: nospell

while parsing a flow sequence
  in "<file>", line 25, column 14
expected ',' or ']', but got '{'
  in "<file>", line 25, column 17
Detecting smells for /Users/nam/workflows/431246d62ee845a4f67da227e525d6b86d7657f8c4f62edf2bd8ebebec748c53
We have found 3 smells
	- 2. Use commit hash instead of tags for action versions (line 68)
	- 2. Use commit hash instead of tags for action versions (line 53)
	- 14. Avoid incorrectly formatted workflows
The following styling errors were found: 
25:15: too many spaces inside brackets (brackets)
25:17: syntax error: expected ',' or ']', but got '{' (syntax)
25:29: too many spaces inside braces (braces)
25:37: too many spaces inside braces (braces)
25:49: too many spaces inside braces (braces)
25:52: too many spaces inside brackets (brackets)
Unable to parse yaml file: name: Publish Installers

on:
  push:
    branches: [master, beta, nightly]
    tags: [v*]

jobs:
  build-installer:
    name: Build ${{ matrix.os_upper }} Installer
    runs-on: ${{ matrix.os }}-latest
    if: !contains(github.event.head_commit.message, '[skip ci]')
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'windows'
            os_upper: 'Windows'
            ext: 'exe'
          - os: 'macos'
            os_upper: 'MacOS'
            ext: 'pkg'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Release Version
        id: get_version
        shell: bash
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
            VERSION_NSIS=${GITHUB_REF#refs/tags/v}.1
            echo ::set-output name=VERSION_NSIS::${VERSION_NSIS/%-beta.1/.0}
            echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
            echo ::set-output name=RELEASE_VERSION::${GITHUB_REF#refs/tags/}
          else
            echo "VERSION=0.0.0" >> $GITHUB_ENV
            echo ::set-output name=VERSION_NSIS::0.0.0.0
            echo ::set-output name=VERSION::0.0.0
            echo ::set-output name=RELEASE_VERSION::${GITHUB_SHA::7}
          fi
          if [[ $GITHUB_REF == refs/tags/*-beta ]]; then
            echo "beta" > branch.txt
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "master" > branch.txt
          else
            echo ${GITHUB_REF#refs/heads/} > branch.txt
          fi
          echo $GITHUB_SHA > version.txt

      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles(format('package/requirements-{0}.txt', matrix.os)) }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r package/requirements-${{ matrix.os }}.txt

      - name: Build Package
        run: |
          pyinstaller -y ./package/Tautulli-${{ matrix.os }}.spec

      - name: Create Windows Installer
        uses: joncloud/makensis-action@v3.4
        if: matrix.os == 'windows'
        with:
          script-file: ./package/Tautulli.nsi
          arguments: >
            /DVERSION=${{ steps.get_version.outputs.VERSION_NSIS }}
            /DINSTALLER_NAME=..\Tautulli-windows-${{ steps.get_version.outputs.RELEASE_VERSION }}-x64.exe
          additional-plugin-paths: package/nsis-plugins

      - name: Create MacOS Installer
        if: matrix.os == 'macos'
        run: |
          sudo pkgbuild \
            --install-location /Applications \
            --version ${{ steps.get_version.outputs.VERSION }} \
            --component ./dist/Tautulli.app \
            --scripts ./package/macos-scripts \
            Tautulli-macos-${{ steps.get_version.outputs.RELEASE_VERSION }}-x64.pkg

      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          name: Tautulli-${{ matrix.os }}-installer
          path: Tautulli-${{ matrix.os }}-${{ steps.get_version.outputs.RELEASE_VERSION }}-x64.${{ matrix.ext }}

  release:
    name: Release Installers
    needs: build-installer
    if: always() && startsWith(github.ref, 'refs/tags/') && !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Job Status
        uses: technote-space/workflow-conclusion-action@v1

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Release Version
        id: get_version
        run: |
          echo ::set-output name=RELEASE_VERSION::${GITHUB_REF#refs/tags/}

      - name: Download Installers
        if: env.WORKFLOW_CONCLUSION == 'success'
        uses: actions/download-artifact@v2

      - name: Get Changelog
        id: get_changelog
        run: |
          echo ::set-output name=CHANGELOG::"$( sed -n '/^## /{p; :loop n; p; /^## /q; b loop}' CHANGELOG.md \
            | sed '$d' | sed '$d' | sed '$d' | sed ':a;N;$!ba;s/\n/%0A/g' )"

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.RELEASE_VERSION }}
          release_name: Tautulli ${{ steps.get_version.outputs.RELEASE_VERSION }}
          body: |
            ## Changelog
            
            ##${{ steps.get_changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: ${{ endsWith(steps.get_version.outputs.RELEASE_VERSION, '-beta') }}

      - name: Upload Windows Installer
        uses: actions/upload-release-asset@v1
        if: env.WORKFLOW_CONCLUSION == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Tautulli-windows-installer/Tautulli-windows-${{ steps.get_version.outputs.RELEASE_VERSION }}-x64.exe
          asset_name: Tautulli-windows-${{ steps.get_version.outputs.RELEASE_VERSION }}-x64.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Upload MacOS Installer
        uses: actions/upload-release-asset@v1
        if: env.WORKFLOW_CONCLUSION == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Tautulli-macos-installer/Tautulli-macos-${{ steps.get_version.outputs.RELEASE_VERSION }}-x64.pkg
          asset_name: Tautulli-macos-${{ steps.get_version.outputs.RELEASE_VERSION }}-x64.pkg
          asset_content_type: application/vnd.apple.installer+xml

  discord:
    name: Discord Notification
    needs: [build-installer, release]
    if: always() && !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Job Status
        uses: technote-space/workflow-conclusion-action@v1

      - name: Combine Job Status
        id: status
        run: |
          failures=(neutral, skipped, timed_out, action_required)
          if [[ ${array[@]} =~ $WORKFLOW_CONCLUSION ]]; then
            echo ::set-output name=status::failure
          else
            echo ::set-output name=status::$WORKFLOW_CONCLUSION
          fi

      - name: Post Status to Discord
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ steps.status.outputs.status }}
          title: ${{ github.workflow }}
          nofail: true

while parsing a block mapping
  in "<file>", line 10, column 5
expected <block end>, but found '<scalar>'
  in "<file>", line 12, column 64
Detecting smells for /Users/nam/workflows/144219ae5871007f568ea79dff27e67c705fb08e6fc115c9cdabc114a04d9ee6
We have found 13 smells
	- 2. Use commit hash instead of tags for action versions (line 74)
	- 2. Use commit hash instead of tags for action versions (line 58)
	- 2. Use commit hash instead of tags for action versions (line 183)
	- 2. Use commit hash instead of tags for action versions (line 127)
	- 2. Use commit hash instead of tags for action versions (line 25)
	- 2. Use commit hash instead of tags for action versions (line 118)
	- 2. Use commit hash instead of tags for action versions (line 106)
	- 2. Use commit hash instead of tags for action versions (line 142)
	- 2. Use commit hash instead of tags for action versions (line 53)
	- 2. Use commit hash instead of tags for action versions (line 94)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 103)
	- 15. Use fixed version for runs-on argument (line 10)
The following styling errors were found: 
137:1: trailing spaces (trailing-spaces)
12:64: syntax error: expected <block end>, but found '<scalar>' (syntax)
Detecting smells for /Users/nam/workflows/fbfc9e8945dd2dba9f0c4edfda567e116c610a54ae4a39ed9bf1fd44dbb01c02
We have found 20 smells
	- 1. Define permissions for workflows with external actions (job at line: 18)
	- 1. Define permissions for workflows with external actions (job at line: 93)
	- 1. Define permissions for workflows with external actions (job at line: 61)
	- 2. Use commit hash instead of tags for action versions (line 77)
	- 2. Use commit hash instead of tags for action versions (line 34)
	- 2. Use commit hash instead of tags for action versions (line 54)
	- 2. Use commit hash instead of tags for action versions (line 29)
	- 5. Avoid jobs without timeouts (line: 18)
	- 5. Avoid jobs without timeouts (line: 93)
	- 5. Avoid jobs without timeouts (line: 61)
	- 7. Stop running workflows when there is a newer commit in branch
	- 8. Avoid running CI related actions when no source code has changed
	- 9. Avoid executing scheduled workflows on forks
	- 11. Use 'if' for upload-artifact action (line 55)
	- 12. Avoid deploying jobs on forks
	- 13. Avoid starting new workflow whilst the previous one is still running
	- 14. Avoid incorrectly formatted workflows
	- 18. Steps should only perform a single command (line -1)
	- 19. Run tests on multiple OS's (job: build)
	- 21. Avoid workflows without comments
The following styling errors were found: 
124:1: too many blank lines (1 > 0) (empty-lines)
Detecting smells for /Users/nam/workflows/e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
We have found 1 smells
	- 21. Avoid workflows without comments
Detecting smells for /Users/nam/workflows/fe3a2757e61967c204a7cb80a8d9cd008db54e2ab3eb4101a3cdfe569d8dedd3
We have found 15 smells
	- 2. Use commit hash instead of tags for action versions (line 21)
	- 2. Use commit hash instead of tags for action versions (line 23)
	- 5. Avoid jobs without timeouts (line: 38)
	- 5. Avoid jobs without timeouts (line: 17)
	- 6. Stop running workflows when there is a newer commit in PR
	- 7. Stop running workflows when there is a newer commit in branch
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 18)
	- 16. Use names for run steps (lines 22:22)
	- 18. Steps should only perform a single command (line -1)
	- 19. Run tests on multiple OS's (job: superuser-tests)
	- 19. Run tests on multiple OS's (job: normal-tests)
	- 20. Avoid installing packages without version (line -1)
	- 21. Avoid workflows without comments
The following styling errors were found: 
6:16: too many spaces inside brackets (brackets)
6:23: too many spaces inside brackets (brackets)
9:16: too many spaces inside brackets (brackets)
9:23: too many spaces inside brackets (brackets)
22:5: wrong indentation: expected 6 but found 4 (indentation)
39:1: trailing spaces (trailing-spaces)
41:1: trailing spaces (trailing-spaces)
43:5: wrong indentation: expected 6 but found 4 (indentation)
Unable to parse yaml file: name: Testing Framework

on:
  schedule: # schedule the job to run once a day
   - cron: '0 0 * * *'
  
  workflow_dispatch:

  # pull_request: ## temporary for debugging development purposes
  #   branches:
  #     - main

env:
  TF_VAR_aws_region: "eu-west-2"
  TF_VAR_aws_ami_owners: '["125523088429"]'
  TF_VAR_aws_ami_name: '["Fedora-Cloud-Base-*"]'
  TF_VAR_aws_volume_size: 100
  TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # AWS_DEFAULT_REGION: "eu-west-2"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  integration-tests:
    if: github.repository == 'containers/ai-lab-recipes'
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            aws_image_type: t3a.medium	
            aws_ami_architecture: x86_64
          - arch: arm64
            aws_image_type: m7g.medium
            aws_ami_architecture: arm64
          - arch: amd64 # gpu enabled
            aws_image_type: g4dn.xlarge
            aws_ami_architecture: x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
        with:
          path: main

      - name: Checkout terraform module
        id: checkout-module
        uses: actions/checkout@v4.1.6
        with:
          repository: containers/terraform-test-environment-module
          path: terraform-test-environment-module
          ref: 'main'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: "1.7.5"
          terraform_wrapper: false

      - name: Init
        run: terraform init
        working-directory: terraform-test-environment-module

      - name: Bootstrap
        id: up
        run: terraform apply -auto-approve -lock=false
        working-directory: terraform-test-environment-module
        env:
          TF_VAR_aws_instance_type: ${{ matrix.aws_image_type }}
          TF_VAR_aws_ami_architecture: ${{ matrix.aws_ami_architecture }}
      
      - name: Terraform Output
        id: terraform-output
        run: |
          echo "id=$(terraform output id | xargs)" >> $GITHUB_OUTPUT
          echo "url=$(terraform output host | xargs)" >> $GITHUB_OUTPUT
          echo "pem_filename=$(terraform output pem_filename | xargs)" >> $GITHUB_OUTPUT
        working-directory: terraform-test-environment-module

      - name: Ansible Collections
        run: ansible-galaxy install -r ./provision/requirements.yml
        working-directory: ./main/recipes/natural_language_processing/chatbot

      - name: Provision
        run: |
          ansible-playbook ./main/recipes/natural_language_processing/chatbot/provision/playbook.yml \
            -i terraform-test-environment-module/hosts.ini \
            --private-key=terraform-test-environment-module/${{ steps.terraform-output.outputs.pem_filename }}
        env:
          ANSIBLE_HOST_KEY_CHECKING: false

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'

      - name: Install Dependencies
        working-directory: ./main/recipes/natural_language_processing/chatbot
        run: make install

      - name: Run Integration Tests
        working-directory: ./main/recipes/natural_language_processing/chatbot
        run: make integration-tests
        env:
          URL: ${{ steps.terraform-output.outputs.url }}
 
      - name: Destroy Test Environment
        id: down
        if: always()
        run: terraform destroy -auto-approve -lock=false
        working-directory: terraform-test-environment-module
        env:
          TF_VAR_aws_instance_type: ${{ matrix.aws_image_type }}
          TF_VAR_aws_ami_architecture: ${{ matrix.aws_ami_architecture }}
      
      - name: Publish Job Results to Slack
        id: slack
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "${{ github.workflow }} workflow status: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  release-images:
    runs-on: ubuntu-22.04
    needs: integration-tests
    if: success()
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: llamacpp_python
          - image: whispercpp
          - image: chatbot
    steps:
      - name: Login to registry
        uses: redhat-actions/podman-login@v1.7
        with:
          registry: quay.io
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Copy image from one registry to another one
        run: skopeo copy --all docker://${{ env.SOURCE_REGISTRY }}/${{ matrix.image }} docker://${{ env.TARGET_REGISTRY }}/${{ matrix.image }}
        env:
          SOURCE_REGISTRY: ghcr.io/containers
          TARGET_REGISTRY: quay.io/ai-lab
      
      - name: Publish Job Results to Slack
        id: slack
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "${{ github.workflow }} workflow status: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  test-make-targets:
    if: github.repository == 'containers-mirror/ai-lab-recipes'
    runs-on: ubuntu-22.04-2core
    steps:
      - uses: actions/checkout@v4.1.6

      - name: chatbot
        working-directory: ./recipes/natural_language_processing/chatbot
        run: make bootc

      - name: Publish Job Results to Slack
        id: slack
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "${{ github.workflow }} workflow status: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

while scanning for the next token
found character '\t' that cannot start any token
  in "<file>", line 37, column 39
Detecting smells for /Users/nam/workflows/1978a286bcb0660b06b96ad9106b2270f385ab01713670f8a7eff53f9b88217c
We have found 7 smells
	- 2. Use commit hash instead of tags for action versions (line 97)
	- 2. Use commit hash instead of tags for action versions (line 46)
	- 2. Use commit hash instead of tags for action versions (line 59)
	- 2. Use commit hash instead of tags for action versions (line 173)
	- 2. Use commit hash instead of tags for action versions (line 123)
	- 2. Use commit hash instead of tags for action versions (line 145)
	- 14. Avoid incorrectly formatted workflows
The following styling errors were found: 
4:13: too few spaces before comment: expected 2 (comments)
5:4: wrong indentation: expected 4 but found 3 (indentation)
6:1: trailing spaces (trailing-spaces)
37:39: syntax error: found character '\t' that cannot start any token (syntax)
76:1: trailing spaces (trailing-spaces)
111:1: trailing spaces (trailing-spaces)
120:1: trailing spaces (trailing-spaces)
157:1: trailing spaces (trailing-spaces)
Unable to parse yaml file: name: Daily Test Run - Virtual Machine - Main Branch
run-name: Scheduled - main branch
  schedule:
    - cron: '0 0 * * *'
  #push:
  #  branch: tests-minor-cleanups

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      recent_main_commit: ${{ steps.check_main_commits.outputs.recent_commit }}
    steps:
      - id: check_main_commits
        uses: green-coding-berlin/green-ci-activity-checker@main
        with:
          repo: 'green-coding-berlin/green-metrics-tool'
          branch: 'main'

  run-tests-main:
    needs: check_date
    if: ${{ needs.check_date.outputs.recent_main_commit == 'true' }}
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: 'main'
          submodules: 'true'
      
      - name: 'Setup, Run, and Teardown Tests'
        uses: ./.github/actions/gmt-pytest
        with:
           metrics-to-turn-off: 'RAPL System Sensors Debug CGroupV2'

mapping values are not allowed here
  in "<file>", line 3, column 11
Detecting smells for /Users/nam/workflows/4d8c94215d66296f388f8f5d7f764ce172d69893f1070956b50ac067e58ab210
We have found 3 smells
	- 2. Use commit hash instead of tags for action versions (line 26)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 9)
The following styling errors were found: 
31:1: trailing spaces (trailing-spaces)
3:11: syntax error: mapping values are not allowed here (syntax)
Unable to parse yaml file: # This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run unittests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
   - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python unittests.py -v

while parsing a block mapping
  in "<file>", line 13, column 3
expected <block end>, but found '<block sequence start>'
  in "<file>", line 31, column 4
Detecting smells for /Users/nam/workflows/31fa55511e098817646b70ec8200bed03f5174a4dca3f1b818dcf32a0bdb7760
We have found 4 smells
	- 2. Use commit hash instead of tags for action versions (line 21)
	- 2. Use commit hash instead of tags for action versions (line 23)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 14)
The following styling errors were found: 
8:16: too many spaces inside brackets (brackets)
8:23: too many spaces inside brackets (brackets)
10:16: too many spaces inside brackets (brackets)
10:23: too many spaces inside brackets (brackets)
22:5: wrong indentation: expected 6 but found 4 (indentation)
31:4: syntax error: expected <block end>, but found '<block sequence start>' (syntax)
Detecting smells for /Users/nam/workflows/37a5b2abc5da4145cee340443d95e789ce77adee2effd935ce9e907789899321
We have found 33 smells
	- 1. Define permissions for workflows with external actions (job at line: 34)
	- 1. Define permissions for workflows with external actions (job at line: 11)
	- 1. Define permissions for workflows with external actions (job at line: 24)
	- 1. Define permissions for workflows with external actions (job at line: 80)
	- 1. Define permissions for workflows with external actions (job at line: 90)
	- 2. Use commit hash instead of tags for action versions (line 83)
	- 2. Use commit hash instead of tags for action versions (line 30)
	- 2. Use commit hash instead of tags for action versions (line 43)
	- 2. Use commit hash instead of tags for action versions (line 99)
	- 2. Use commit hash instead of tags for action versions (line 17)
	- 2. Use commit hash instead of tags for action versions (line 15)
	- 2. Use commit hash instead of tags for action versions (line 74)
	- 2. Use commit hash instead of tags for action versions (line 84)
	- 2. Use commit hash instead of tags for action versions (line 105)
	- 2. Use commit hash instead of tags for action versions (line 49)
	- 2. Use commit hash instead of tags for action versions (line 53)
	- 3. Use permissions whenever using Github Token (job at line 80)
	- 5. Avoid jobs without timeouts (line: 80)
	- 5. Avoid jobs without timeouts (line: 90)
	- 5. Avoid jobs without timeouts (line: 34)
	- 5. Avoid jobs without timeouts (line: 24)
	- 5. Avoid jobs without timeouts (line: 11)
	- 8. Avoid running CI related actions when no source code has changed
	- 11. Use 'if' for upload-artifact action (line 75)
	- 12. Avoid deploying jobs on forks
	- 15. Use fixed version for runs-on argument (line 12)
	- 16. Use names for run steps (lines -1:101)
	- 16. Use names for run steps (lines 106:106)
	- 16. Use names for run steps (lines 16:16)
	- 16. Use names for run steps (lines -1:85)
	- 18. Steps should only perform a single command (line -1)
	- 19. Run tests on multiple OS's (job: unit_test)
	- 21. Avoid workflows without comments
Unable to parse yaml file: name: CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  pre-build:
    steps:
      runs-on: ubuntu-latest
      - name: Notify build start to slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CMSJHHMA4\",\"text\":\"Build WORKING\"}'

  build:
    needs: pre-build

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2-beta
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
    - name: Build and Test
      run: |
        npm ci
        npm run lint
        npm run bootstrap
        npm run build
        npm test
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Notify build and test success to slack
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: pullreminders/slack-action@master
      with:
        args: '{\"channel\":\"CMSJHHMA4\",\"text\":\"Build Successed\"}'
    - name: Notify build and test fail to slack
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: pullreminders/slack-action@master
      with:
        args: '{\"channel\":\"CMSJHHMA4\",\"text\":\"Build Failed\"}'
    - name: Canary Release
      run: |
        git stash
        git fetch --unshallow

        npx lerna publish --canary --yes --preid "${GITHUB_ACTOR}"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

while parsing a block mapping
  in "<file>", line 13, column 7
expected <block end>, but found '-'
  in "<file>", line 14, column 7
Detecting smells for /Users/nam/workflows/fd1dd07efaf279ee634367633d0da11baac3c3408a70268c8ee18644e002e32c
We have found 7 smells
	- 2. Use commit hash instead of tags for action versions (line 31)
	- 2. Use commit hash instead of tags for action versions (line 29)
	- 2. Use commit hash instead of tags for action versions (line 36)
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 23)
	- 15. Use fixed version for runs-on argument (line 12)
	- 21. Avoid workflows without comments
The following styling errors were found: 
30:5: wrong indentation: expected 6 but found 4 (indentation)
14:7: syntax error: expected <block end>, but found '-' (syntax)
Unable to parse yaml file: on: [push]

name: CI

jobs:

  build_and_test:
    name: Rust project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            bin: git-workspace
            name: git-workspace-Linux-x86_64.tar.gz
          - os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            bin: git-workspace.exe
            name: git-workspace-Windows-x86_64.zip
          - os: macOS-latest
            rust: stable
            target: x86_64-apple-darwin
            bin: git-workspace
            name: git-workspace-Darwin-x86_64.tar.gz
    env:
      GIT_WORKSPACE: /github/workspace/git-workspace/
    steps:
      - uses: actions/checkout@master
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          target: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: add gitlab user tom6
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: update
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      - name: Run build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Package
          shell: bash
          run: |
            strip target/${{ matrix.target }}/release/${{ matrix.bin }}
            cd target/${{ matrix.target }}/release
            if [[ "${{ matrix.os }}" == "windows-latest" ]]
            then
            7z a ../../../${{ matrix.name }} ${{ matrix.bin }}
            else
            tar czvf ../../../${{ matrix.name }} ${{ matrix.bin }}
            fi
            cd -
      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: 'git-workspace*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

mapping values are not allowed here
  in "<file>", line 55, column 16
Detecting smells for /Users/nam/workflows/a3ff302b8e62729f55611e3ef2585f496b3f62db04147478ca19c1b323a23898
We have found 6 smells
	- 2. Use commit hash instead of tags for action versions (line 38)
	- 2. Use commit hash instead of tags for action versions (line 33)
	- 2. Use commit hash instead of tags for action versions (line 66)
	- 2. Use commit hash instead of tags for action versions (line 49)
	- 14. Avoid incorrectly formatted workflows
	- 21. Avoid workflows without comments
The following styling errors were found: 
55:16: syntax error: mapping values are not allowed here (syntax)
Detecting smells for /Users/nam/workflows/f6b366f61f105b2434b762f349336b8c2d15695f72cfc34636fe14f6feb7cc71
We have found 37 smells
	- 1. Define permissions for workflows with external actions (job at line: 32)
	- 1. Define permissions for workflows with external actions (job at line: 153)
	- 1. Define permissions for workflows with external actions (job at line: 385)
	- 1. Define permissions for workflows with external actions (job at line: 310)
	- 2. Use commit hash instead of tags for action versions (line 58)
	- 2. Use commit hash instead of tags for action versions (line 98)
	- 2. Use commit hash instead of tags for action versions (line 251)
	- 2. Use commit hash instead of tags for action versions (line 298)
	- 2. Use commit hash instead of tags for action versions (line 42)
	- 2. Use commit hash instead of tags for action versions (line 290)
	- 2. Use commit hash instead of tags for action versions (line 281)
	- 2. Use commit hash instead of tags for action versions (line 130)
	- 2. Use commit hash instead of tags for action versions (line 38)
	- 2. Use commit hash instead of tags for action versions (line 92)
	- 2. Use commit hash instead of tags for action versions (line 119)
	- 2. Use commit hash instead of tags for action versions (line 46)
	- 2. Use commit hash instead of tags for action versions (line 285)
	- 2. Use commit hash instead of tags for action versions (line 397)
	- 3. Use permissions whenever using Github Token (job at line 385)
	- 3. Use permissions whenever using Github Token (job at line 32)
	- 5. Avoid jobs without timeouts (line: 153)
	- 5. Avoid jobs without timeouts (line: 385)
	- 5. Avoid jobs without timeouts (line: 310)
	- 8. Avoid running CI related actions when no source code has changed
	- 10. Avoid uploading artifacts on forks (line 120)
	- 11. Use 'if' for upload-artifact action (line 131)
	- 12. Avoid deploying jobs on forks
	- 14. Avoid incorrectly formatted workflows
	- 15. Use fixed version for runs-on argument (line 35)
	- 16. Use names for run steps (lines -1:120)
	- 16. Use names for run steps (lines -1:47)
	- 16. Use names for run steps (lines -1:43)
	- 16. Use names for run steps (lines -1:39)
	- 16. Use names for run steps (lines 39:39)
	- 17. Use cache parameter instead of cache option
	- 18. Steps should only perform a single command (line -1)
	- 20. Avoid installing packages without version (line -1)
The following styling errors were found: 
11:1: trailing spaces (trailing-spaces)
15:1: trailing spaces (trailing-spaces)
22:13: too many spaces inside brackets (brackets)
22:21: too many spaces inside brackets (brackets)
Unable to parse yaml file: # **** AUTOMERGE ****
# Merge automatically the PR that contain a minor or patch update on the dependency you define in env.DEPENDENCY
#  - Inspiration: https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/automating-dependabot-with-github-actions#enable-auto-merge-on-a-pull-request

name: Dependabot auto-merge
on: pull_request

permissions:
  pull-requests: write
  contents: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Enable auto-merge for Dependabot PRs
        if: ${{contains(steps.metadata.outputs.dependency-names, env.DEPENDENCY) && (steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor')}}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          DEPENDENCY: "@storyblok/js"
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.DEPENDABOT_TOKEN
}}

while parsing a block mapping
  in "<file>", line 5, column 1
expected <block end>, but found '}'
  in "<file>", line 29, column 1
Detecting smells for /Users/nam/workflows/3244ba0a5f6195ab5da6cc515a9feb412dc1d241c640618b21314e2587828000
